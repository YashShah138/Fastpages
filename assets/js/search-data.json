{
  
    
        "post0": {
            "title": "2018 AP CSA FRQ 1",
            "content": "Part A . Write the simulate method, which simulates the frog attempting to hop in a straight line to a goal from the frog&#39;s starting position of 0 within a maximum number of hops. The method returns true if the frog successfully reached the goal within the maximum number of hops; otherwise, the method returns false. . The FrogSimulation class provides a method called hopDistance that returns an integer representing the distance (positive or negative) to be moved when the frog hops. A positive distance represents a move toward the goal. A negative distance represents a move away from the goal. The returned distance may vary from call to call. Each time the frog hops, its position is adjusted by the value returned by a call to the hopDistance method. . The frog hops until one of the following conditions becomes true: . The frog has reached or passed the goal. | The frog has reached a negative position. | The frog has taken the maximum number of hops without reaching the goal. | . Complete method simulate below. You must use hopDistance appropriately to receive full credit. . /** Simulates a frog attempting to reach the goal as described in part (a). * Returns true if the frog successfully reached or passed the goal during the simulation; * false otherwise. */ public boolean simulate() . My Solution . public boolean simulate() { int pos = 0; for (int i = 0; i &lt; maxHops; i ++) { posNow += hopDistance(); if (posNow &gt;= goalDistance) { return true; } else if (posNow &lt; 0) { return false; } } } . CollegeBoard Solution . public boolean simulate() { int position = 0; for (int count = 0; count &lt; maxHops; count++) { position += hopDistance(); if (position &gt;= goalDistance) { return true; } else if (position &lt; 0) { return false; } } return false; } . Part B . Write the runSimulations method, which performs a given number of simulations and returns the proportion of simulations in which the frog successfully reached or passed the goal. For example, if the parameter passed to runSimulations is 400, and 100 of the 400 simulate method calls returned true, then the runSimulations method should return 0.25. . Complete method runSimulations below. Assume that simulate works as specified, regardless of what you wrote in part (a). You must use simulate appropriately to receive full credit. . /** Runs num simulations and returns the proportion of simulations in which the frog * successfully reached or passed the goal. * Precondition: num &gt; 0 */ . public double runSimulations(int num) . My Solution . public double runSimulations(int num) { int countS = 0; for (int j = 0; i &lt; num; i++) { if (simulate()) { countS++; } } return ((double)numSuccess/num); } . CollegeBoard Solution . public double runSimulations(int num) { int countSuccess = 0; for (int count = 0; count &lt; num; count++) { if(simulate()) { countSuccess++; } } return (double)countSuccess / num; } .",
            "url": "https://yashshah138.github.io/Fastpages/frqs/2022/09/20/AP-CSA-FRQ1.html",
            "relUrl": "/frqs/2022/09/20/AP-CSA-FRQ1.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Focus and Habits",
            "content": "Psychology and the Good Life by Laurie Santos Takeaways . Be happy | Be grateful for the things that you have | It is ok to ask for help | Just be present in the moment Don’t be worried about the past and don’t be anxious about the future | . | . Who Am I Grateful For . My family | My friends | My good health | . My Goals . I want to major in computer science with specialization in machine learning | I want to work in either software development or in investment banking and private equity | I want to better manage my time | I want to sleep at better times | I want to develop the technical skills in computer science to succeed | . . . .",
            "url": "https://yashshah138.github.io/Fastpages/human%20prep/2022/09/12/Focus-and-Habits.html",
            "relUrl": "/human%20prep/2022/09/12/Focus-and-Habits.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Boolean Expressions and If/Else Statements",
            "content": "Boolean Expressions . Booleans are either one of two instances. True/False or On/Off | A boolean type is declared with the boolean keyword and can only take the values true or false | . if (true) { System.out.println(&quot;True code block&quot;); } if (true &amp;&amp; !false) { System.out.println(&quot;True and Not False code block&quot;); } if (true || false) { System.out.println(&quot;True or False code block&quot;); } if ((true &amp;&amp; !false) &amp;&amp; (true || false)) { System.out.println(&quot;Confusing code block&quot;); } if (!((false || !true) || (false &amp;&amp; true))) { System.out.println(&quot;De Morgan&#39;s law in my head of confusing code block&quot;); } . True code block True and Not False code block True or False code block Confusing code block De Morgan&#39;s law in my head of confusing code block . If/Elseif/Else Statements . If statement to specify a block of Java code to be executed if a condition is true | Else statement to specify a block of code to be executed if the condition is false | Else if statement to specify a new condition if the first condition is false. | . int time = 22; // if statement if (time &lt; 10) { System.out.println(&quot;Good morning.&quot;); } // else if statement else if (time &lt; 20) { System.out.println(&quot;Good day.&quot;); } // else statement else { System.out.println(&quot;Good evening.&quot;); } . Good evening. . De Morgan&#39;s Law . Two definitions De Morgan&#39;s Law of Union: The complement of the union of the two sets A and B will be equal to the intersection of A&#39; (complement of A) and B&#39; (complement of B). This is also known as De Morgan&#39;s Law of Union. It can be represented as (A ∪ B)&#39; = A&#39; ∩ B&#39;. | Laws that define how we can negate an AND statement and how we can negate an OR statement. De Morgan&#39;s Laws simply state: !( a &amp;&amp; b) is equivalent to !a || ! | . | . if (!(!false &amp;&amp; !true) || (!(!false || false))) { System.out.println(&quot;De Morgan&#39;s Law hurts my head!&quot;); } . De Morgan&#39;s Law hurts my head! . Hack 2 - Add to lesson switch-case . public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); // sets the variable &quot;day&quot; as user input int day = sc.nextInt(); System.out.println(&quot;Pick an number between 1 and 7 &quot; + day); // checks if the user inputted number is 1 // If not, it runs through the rest of the statements if(num = 1){ System.out.println(&quot;The day is Monday&quot;); } else if(num = 2){ System.out.println(&quot;The day is Tuesday&quot;); } else if(num = 3){ System.out.println(&quot;The day is Wednesday&quot;); } else if(num = 4){ System.out.println(&quot;The day is Thursday&quot;); } else if(num = 5){ System.out.println(&quot;The day is Friday&quot;); } else if(num = 6){ System.out.println(&quot;The day is Saturday&quot;); } else if(num = 7){ System.out.println(&quot;The day is Sunday&quot;); } else{ System.out.println(&quot;Not a valid entry&quot;); } } } Main.main(null); . Pick a number: 26 26 is less than 30 . Converted to switch-case-case-case-case-otherwise . public class Switch { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int day = sc.nextInt(); // Asks user for a number of their choice System.out.println(&quot;Pick an number between 1 and 7: &quot; + day); // the day is the conditional variable that is tested switch (day) { // The switch case checks multiple conditions at once. // Switch is provided with an expression that can be a constant or literal expression that can be evaluated. // The value of the expression is matched with each test case till a match is found. // If there is no match then the &quot;default&quot; code runs. case 1: System.out.println(&quot;The first day is Monday&quot;); break; case 2: System.out.println(&quot;The second day is Tuesday&quot;); break; case 3: System.out.println(&quot;The third day is Wednesday&quot;); break; case 4: System.out.println(&quot;The fourth day is Thursday&quot;); break; case 5: System.out.println(&quot;The fifth day is Friday&quot;); break; case 6: System.out.println(&quot;The sixth day is Saturday&quot;); break; case 7: System.out.println(&quot;The seventh day is Sunday&quot;); break; // Our last test is if the number is not between 1 and 7. default: System.out.println(&quot;Not a valid entry. Choose a number between 1 and 7.&quot;); } } } Switch.main(null); . Pick an number between 1 and 7: 3 The third day is Wednesday .",
            "url": "https://yashshah138.github.io/Fastpages/2022/09/07/Boolean-Expressions-and-If-Statements.html",
            "relUrl": "/2022/09/07/Boolean-Expressions-and-If-Statements.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "code.org Unit 1",
            "content": "// Creating a class public class MyNeighborhood { public static void main(String[] args) { // Creating an Object Painter myPainter = new Painter(); // calling a method using dot notation myPainter.move(); myPainter.turnLeft(); } } . // Extend a superclass to the subclass // A.K.A. Inheritance public class PainterPlus extends Painter { public PainterPlus() { super(); } } . Inheritance . Inheritance allows us to &quot;inherit&quot; the methods and attributes of the superclass to the subclass | . // Formatting for inheritance public class subclass extends superclass { // code here } .",
            "url": "https://yashshah138.github.io/Fastpages/week%202/2022/09/06/code-org.html",
            "relUrl": "/week%202/2022/09/06/code-org.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Console Menu",
            "content": "Console Based Menu . Objects Used: . Used scanner class to get user input and make objects | Used system class to print out static methods | Used the Math Class from Java to create a basic console calculator | . import java.util.*; import java.util.Scanner; public class Hello { public static void main(String[] args) { Scanner inp = new Scanner(System.in); System.out.println(&quot;-&quot;); System.out.println(&quot;Choose one&quot;); System.out.println(&quot;-&quot;); System.out.println(&quot;1 - Addition&quot;); System.out.println(&quot;2 - Subtraction&quot;); System.out.println(&quot;3 - Multiplication&quot;); System.out.println(&quot;4 - Division&quot;); System.out.println(&quot;- n&quot;); int choose; choose = inp.nextInt(); System.out.println(&quot;Enter first number: &quot;); int num1; num1 = inp.nextInt(); System.out.println(&quot;Enter second number: &quot; + &quot; n&quot;); int num2; num2 = inp.nextInt(); int ans; switch (choose) { case 1: System.out.println(add( num1,num2)); break; case 2: System.out.println(sub( num1,num2)); break; case 3: System.out.println(mult( num1,num2)); break; case 4: System.out.println(div( num1,num2)); break; default: System.out.println(&quot;Illegal Operation&quot;); } } public static int add (int x, int y) { int result = x + y; System.out.println(x + &quot; + &quot; + y + &quot; equals&quot;); return result; } public static int sub (int x, int y) { int result = x-y; System.out.println(x + &quot; - &quot; + y + &quot; equals&quot;); return result; } public static int mult (int x, int y) { int result = x*y; System.out.println(x + &quot; * &quot; + y + &quot; equals&quot;); return result; } public static int div (int x, int y) { int result = x/y; System.out.println(x + &quot; / &quot; + y + &quot; equals&quot;); return result; } } Hello.main(null); . - Choose one - 1 - Addition 2 - Subtraction 3 - Multiplication 4 - Division - Enter first number: Enter second number: 3 * 3 equals 9 . Desktop GUI Menu . Swing and AWT imports allow Java to provide a Graphical User Interface on the desktop. . Other College Board Topics . A 1D array is used to store MENUS | A Control Structure, if-else if-else, is used to process Menu selection to code that performs related action | . Using Objects . Javax Swing UI (JFrame) | Timer with a TimerTask to allow action to repeatedly occur without halting thread. | . import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.util.Timer; import java.util.TimerTask; // Graphical-User-Interface for Desktop in Java using Java Swing. public class MenuJFrame extends JFrame implements ActionListener { private JFrame frame; private JMenuBar menubar; private JMenu menu; private JLabel message = new JLabel(&quot;Click on Menu to select an action.&quot;); public final String[] MENUS = { // 1D Array of Menu Choices &quot;CSA&quot;, &quot;COLORS&quot;, &quot;Loading...&quot;, }; // Statics to assist with timer and messaging, single copy (no instance) private static int delay = 10; private static int step = 1; private static String hashes = &quot;&quot;; // Constructor enables the Frame instance, the object &quot;this.frame&quot; public MenuJFrame(String title) { // Initializing Key Objects frame = new JFrame(title); menubar = new JMenuBar(); menu = new JMenu(&quot;Menu&quot;); // Initializing Menu objects and adding actions for (String mx : MENUS) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu.add(m); } // Adding / Connecting Objects menubar.add(menu); frame.setJMenuBar(menubar); frame.add(message); // Sets JFrame close operation to Class variable JFrame.EXIT_ON_CLOSE frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // set the size of window based on objects frame.setSize(700,400); // helps set the window to center of screen frame.setLocationRelativeTo(null); // makes the frame object visible according to properties previously set frame.setVisible(true); // flow of control shifts to frame object } public static void centreWindow(Window frame) { Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize(); int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2); int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2); frame.setLocation(x, y); } // event from user selecting a menu option public void actionPerformed(ActionEvent e) { // local variable to ActinEvent String selection = e.getActionCommand(); // menu selection String msg; // local variable to create response from action final String[] COLORS = {&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;, &quot;Yellow&quot;, &quot;Purple&quot;}; // add more colors here final String start_msg = &quot;&lt;html&gt;&quot;; // html building final String end_msg = &quot;&lt;/html&gt;&quot;; final String hash = &quot;$&quot;; // run code based on the menuItem that was selected if ( selection.equals(MENUS[0]) ) { // Hello Action msg = &quot;CSA IS AWESOME!&quot;; message.setText(msg); } else if ( selection.equals(MENUS[1]) ) { // Color Action msg = start_msg + &quot;&lt;p&gt;&quot; + selection + &quot;&lt;/p&gt;&quot;; for (String color : COLORS) { msg += &quot;&lt;font color=&quot; + color + &quot;&gt;&quot; + color + &quot; &lt;/font&gt;&quot;; } msg += end_msg; message.setText(msg); } else { // Loading Bar Action String loading = &quot;&lt;p&gt;Loading&lt;/p&gt;&quot;; // Code to run on a Timer Timer timer = new Timer(); TimerTask task = new TimerTask() { public void run() { // Method for TimerTask // Static and Local variables used to manage message building int random = (int) (Math.random() * COLORS.length); // random logic MenuJFrame.hashes += &quot;&lt;font color=&quot; + COLORS[random] + &quot;&gt;&quot; + hash + &quot;&lt;/font&gt;&quot;; String msg = start_msg + loading + hashes + end_msg; message.setText(msg); // Shutdown timer and reset data if(MenuJFrame.step++ &gt; MenuJFrame.delay) { MenuJFrame.step = 1; MenuJFrame.hashes=&quot;&quot;; timer.cancel(); } }; }; // Schedule task and interval timer.schedule(task, 200, 200); message.setText(start_msg + loading + hash + end_msg); // prime/initial display } } // Driver turn over control the GUI public static void main(String[] args) { // Activates an instance of MenuJFrame class, which makes a JFrame object new MenuJFrame(&quot;Menu&quot;); } } MenuJFrame.main(null); . Hacks . Explain where a Class is defined . A class is defined where you add variables, objects or methods to your code | . public class // Classname . Explain where an instances of a Class is defined . An instance is defined in the main class | For example, on Code.org we initiated an instance with | . PainterPlus myPainter = new PainterPlus(); . Explain where an object is calling a method . An object is calling a method when an action needs to be performed for the code to run. | Calling a method on code.org | . myPainter.paint(&quot;white&quot;); . Describe Console, GUI differences, or Code.org differences . Console . User enters input and get respective outputs | Not as visual | Requires very good understanding of script and syntax | Examples: BASH, Terminal, Command Prompt, Kali linux | . | GUI . Graphical User Interface | More visual interface | User-friendly | Examples: iOS, Android, MacOS, Windows | . | code.org . Introductory platform | Graphical representation of what code does with the syntax of the language | . | .",
            "url": "https://yashshah138.github.io/Fastpages/week%202/2022/09/06/Using-Objects.html",
            "relUrl": "/week%202/2022/09/06/Using-Objects.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Extra Credit Notes",
            "content": "Reflection . There were several things that I learned from the student panel today. The first thing that I learned was that within the field of computer science, there will always be somebody that is better at something than you, and instead of being sad about that to focus on my own strengths and play to those. For example, if somebody is better at the syntax of the language and I am better with the logic, we can form a team where I can plan out the structure and flow of the code and my partner can code the program. The second thing I learned from the student panel was that no matter which field of study you go to, there will always be computer science to either make it more efficient or help with automation. The example that I remember from the panel is from Colin when he was talking about a script that he wrote to convert his notes from a .docx file into a spreadsheet. I connected this with the automation hack that we had for this week where we tried to automate the installation process of the packages. The third and most important thing, in my opinion, is to persevere. There will always be bugs or problems and you cannot give up because you didn’t find the bub. On example I remember is when Mabel was talking about how we all forget a semicolon or an indent and we just have to be patient and persevere through. . Notes . Look at how you have developed and compare yourself with classmates | Look at your passions and look at how cs can help | CS will be used almost anywhere and should know as base | CSP helped build the technical background of building UI/UX | Most of them always had passion for CS and developed that passion through CSA/CSP | They realized that CS could help people | Persevere through challenges | Have to focus on your own path, don’t be worried about what other people think/do | Transition from HS to college CS was quite drastic | Just break things down into little steps | Not expected to know everything, learn to use resources to fix errors and learn | Don’t cut corners, go above and beyond | Will not always have a path, don’t be so focused on the plan that you don’t start | Good to have the knowledge of PBL classes beforehand | Be able to ask questions | Able to automate menial tasks | CS has lots of utilizations and useful even if you are not majoring in it | Will apply the stuff in other classes | Stats uses R | Build relationships with professors to do work with them | .",
            "url": "https://yashshah138.github.io/Fastpages/extra%20credit/2022/08/29/Alumni-Panel.html",
            "relUrl": "/extra%20credit/2022/08/29/Alumni-Panel.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Bash Kernel Basics Notebook",
            "content": "echo &quot;List of all files in the root folder ... &quot; cd vscode/Fastpages ls echo &quot;&quot; echo &quot;List of all files in the repository including all hidden files:&quot; cd vscode/Fastpages ls -a . List of all files in the root folder: 2022-05-15-07-21-16.png _config.yml _sass 2022-05-15-07-24-25.png _fastpages_docs _word 2022-05-15-07-25-15.png _includes assets Gemfile _layouts docker-compose.yml LICENSE _notebooks images Makefile _pages index.html README.md _plugins _action_files _posts List of all files in the repository including all hidden files: bash: cd: vscode/Fastpages: No such file or directory . 2022-05-15-07-25-15.png _pages .. Gemfile _plugins .DS_Store LICENSE _posts .devcontainer.json Makefile _sass .git README.md _word .gitattributes _action_files assets .github _config.yml docker-compose.yml .gitignore _fastpages_docs images .vscode _includes index.html 2022-05-15-07-21-16.png _layouts 2022-05-15-07-24-25.png _notebooks . Hack 1 - Is there anything we use to verify tools we install? . echo &quot;Checking versions and existence of python and java ... &quot; python3 --version python2 --version java --version javac --version . Checking versions and existence of python and java: Python 3.9.12 Python 2.7.18 java 11.0.12 2021-07-20 LTS Java(TM) SE Runtime Environment 18.9 (build 11.0.12+8-LTS-237) Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.12+8-LTS-237, mixed mode) javac 11.0.12 . Hack 2 - Is there anything we could verify with Anaconda? . echo &quot;Running checks with Anaconda ... &quot; conda --version echo &quot;&quot; conda list python . Running checks with Anaconda: conda 4.13.0 # packages in environment at /Users/yash/opt/anaconda3: # # Name Version Build Channel ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 msgpack-python 1.0.2 py39hf7b0b51_1 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 . Hack 3 - How would you update a repository? . cd ~/vscode/Fastpages git pull . Already up to date. . This is a small script to show understanding of BASH . echo &quot;&quot; echo &quot;This script will create a file in the _pages directory and will put all files inside including hidden files.&quot; cd ~ echo &quot;&quot; cd vscode/Fastpages/_pages ls touch 06_bash.md cd ~ ls -al &gt; vscode/Fastpages/_pages/06_bash.md echo &quot;&quot; echo &quot;vscode/Fastpages/_pages/06_bash.md&quot; nl vscode/Fastpages/_pages/06_bash.md . This script will create a file in the _pages directory and will put all files inside including hidden files. 01_notes.md 03_about.md 05_tags.html 404.html 02_vocab.md 04_search.html 06_bash.md vscode/Fastpages/_pages/06_bash.md 1 total 208 2 drwxr-xr-x+ 55 yash staff 1760 Aug 26 09:06 . 3 drwxr-xr-x 6 root admin 192 Aug 10 23:44 .. 4 -r-- 1 yash staff 7 Oct 2 2019 .CFUserTextEncoding 5 -rw-r--r--@ 1 yash staff 14340 Aug 23 10:43 .DS_Store 6 drwx 183 yash staff 5856 Aug 26 09:40 .Trash 7 drwxr-xr-x 3 yash staff 96 Oct 20 2021 .android 8 -rw- 1 yash staff 12711 Aug 26 09:11 .bash_history 9 -rw-r--r-- 1 yash staff 1331 Aug 18 08:54 .bash_profile 10 -rw-r--r-- 1 yash staff 672 Oct 4 2021 .bash_profile.pysave 11 drwx 30 yash staff 960 Aug 26 09:11 .bash_sessions 12 drwxr-xr-x 3 yash staff 96 Aug 18 22:40 .cache 13 drwxrwsr-x 3 yash staff 96 Aug 18 08:59 .conda 14 drwxr-xr-x 6 yash staff 192 Aug 21 23:39 .config 15 drwx 3 yash staff 96 Jun 2 2020 .cups 16 -rw-r--r-- 1 yash staff 208 Aug 26 2021 .gitconfig 17 drwxr-xr-x 4 yash staff 128 Sep 21 2021 .gradle 18 drwxr-xr-x 5 yash staff 160 May 1 19:15 .idlerc 19 drwxr-xr-x 3 yash staff 96 Mar 4 08:34 .ipython 20 drwxr-xr-x 3 yash staff 96 Aug 18 08:59 .jupyter 21 drwxr-xr-x 3 yash staff 96 Apr 12 10:14 .keras 22 -rw- 1 yash staff 20 May 6 12:04 .lesshst 23 drwxr-xr-x 3 yash staff 96 Aug 19 14:15 .m2 24 drwxr-xr-x 2 yash staff 64 Mar 8 13:25 .matplotlib 25 drwxr-xr-x 3 yash staff 96 Aug 18 09:21 .node-gyp 26 drwxr-xr-x 8 yash staff 256 Aug 21 23:44 .npm 27 drwxr-xr-x 3 yash staff 96 Mar 26 2021 .oracle_jre_usage 28 drwx 3 yash staff 96 Apr 12 11:25 .putty 29 -rw- 1 yash staff 51 Aug 27 2021 .python_history 30 drwxr-xr-x 3 yash staff 96 Aug 19 08:42 .redhat 31 drwx 6 yash staff 192 Aug 12 19:04 .ssh 32 drwxr-xr-x 3 yash staff 96 Aug 18 22:43 .sts4 33 -rw-r--r-- 1 yash staff 314 Aug 18 08:54 .tcshrc 34 -rw- 1 yash staff 1071 Aug 26 2021 .viminfo 35 drwxr-xr-x 4 yash staff 128 Feb 28 10:51 .vscode 36 -rw-r--r-- 1 yash staff 165 Aug 18 09:23 .wget-hsts 37 -rw-r--r-- 1 yash staff 597 Aug 18 08:54 .xonshrc 38 -rw-r--r-- 1 yash staff 248 Aug 21 23:32 .zprofile 39 -rw- 1 yash staff 18722 Aug 26 09:06 .zsh_history 40 drwx 68 yash staff 2176 Aug 26 09:06 .zsh_sessions 41 -rw-r--r-- 1 yash staff 490 Aug 18 08:54 .zshrc 42 drwx@ 5 yash staff 160 Nov 16 2021 Applications 43 drwx@ 4 yash staff 128 Aug 24 14:35 Creative Cloud Files 44 drwx@ 7 yash staff 224 Jul 11 21:15 Desktop 45 drwx@ 8 yash staff 256 May 11 10:34 Documents 46 drwx@ 48 yash staff 1536 Aug 25 22:44 Downloads 47 drwx@ 104 yash staff 3328 Aug 24 14:19 Library 48 drwx+ 9 yash staff 288 Dec 8 2021 Movies 49 drwx+ 10 yash staff 320 May 11 10:09 Music 50 drwx+ 7 yash staff 224 Dec 14 2020 Pictures 51 drwxr-x+ 4 yash staff 128 Oct 2 2019 Public 52 drwxr-xr-x 4 yash staff 128 Mar 5 2021 Samsung 53 drwxr-xr-x 5 yash staff 160 May 5 2019 java 54 drwxr-xr-x 3 yash staff 96 Aug 18 08:41 opt 55 drwxr-xr-x 8 yash staff 256 Aug 25 08:55 vscode 56 -rw-r--r--@ 1 yash staff 162 Feb 16 2021 ~$mes_Final.docx . Below is a script I developed to automate deployment . sudo apt update; sudo apt upgrade sudo apt install default-jre java --version sudo apt install default-jdk javac --version sudo apt update sudo apt upgrade sudo apt install maven mvn --version # This segment of code clones the repository and goes into that directory after done cloning cd ~ git clone https://github.com/guapbeast/Spring.git cd ~/Spring # Runs the maven wrapper package ./mvnw package # This assigns the result of the previous command to RESULT # Then runs an if/else statement # Saying that if the previous commands result comes back as exit code 0 # Then to proceed with changing the directory # If it does not work, then execute the following commands RESULT=$? if [[ $RESULT -eq 0 ]] then cd ~/Spring else sudo apt install -y dos2unix dos2unix ./mvnw chmod +x ./mvnw fi # &quot;&gt;&quot; overrides whatever is already in the file and writes # What is in the &quot;echo&quot; echo &#39; # syntax=docker/dockerfile:1 FROM openjdk:16-alpine3.13 WORKDIR /app RUN apk update &amp;&amp; apk upgrade &amp;&amp; apk add --no-cache git maven RUN git clone https://github.com/guapbeast/Spring.git /app RUN ./mvnw package CMD [&quot;java&quot;, &quot;-jar&quot;, &quot;target/spring-0.0.1-SNAPSHOT.jar&quot;] # EXPOSE port that is defined in spring_portfolio.git application.properties EXPOSE 8085&#39; &gt; Dockerfile # &quot;&gt;&quot; overrides whatever is already in the file and writes # What is in the &quot;echo&quot; echo &#39; version: &quot;3&quot; services: web: image: java_springv1 build: . ports: - &quot;8085:8085&quot; volumes: - persistent_volume:/app/volumes volumes: persistent_volume: driver: local driver_opts: o: bind type: none device: /home/ubuntu/Spring/volumes&#39; &gt; docker-compose.yml # Installs docker and docker-compose sudo apt install docker-compose -y sudo docker-compose up -d sudo apt install nginx cd /etc/nginx/sites-available sudo touch Spring # &quot;&gt;&quot; overrides whatever is already in the file and writes # What is in the &quot;echo&quot; echo &#39; server { listen 80; listen [::]:80; server_name csarithwikh.live www.csarithwikh.live; location / { proxy_pass http://localhost:8085; # Simple requests if ($request_method ~* &quot;(GET|POST)&quot;) { add_header &quot;Access-Control-Allow-Origin&quot; *; } # Preflight requests if ($request_method = OPTIONS ) { add_header &quot;Access-Control-Allow-Origin&quot; *; add_header &quot;Access-Control-Allow-Methods&quot; &quot;GET, POST, OPTIONS, HEAD&quot;; add_header &quot;Access-Control-Allow-Headers&quot; &quot;Authorization, Origin, X-Requested-With, Content-Type, Accept&quot;; return 200; } } }&#39; &gt; Spring sudo ln -s /etc/nginx/sites-available/Spring /etc/nginx/sites-enabled sudo nginx -t # This assigns the result of the previous command to RESULT # Then runs an if/else statement # Saying that if the previous commands result comes back as exit code 0 # Then to run the following code # If it does not work, then execute the other commands RESULT=$? if [[ $RESULT -eq 0 ]] then sudo systemctl restart nginx else echo &quot;Something went wrong!!!&quot; fi # Transfers data to the address curl http://localhost:8085; sudo snap install core; sudo snap refresh core sudo snap install --classic certbot sudo ln -s /snap/bin/certbot /usr/bin/certbot sudo certbot --nginx .",
            "url": "https://yashshah138.github.io/Fastpages/week%201/2022/08/25/Bash-Tutorial.html",
            "relUrl": "/week%201/2022/08/25/Bash-Tutorial.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Primitive Data Types",
            "content": "Notes on Primitive Data Types . There are two main types of data structures, primitive and non-primitive. Strings, arrays, etc. are examples of non-primitive data types. . Within primitive data types, we have boolean, characters (chars), bytes, shorts, ints, longs, floats, and doubles. For non-primitive data types, it is anything the is, well, non-primitive. For example, we have arrays and strings. . // java style to import library import java.util.Scanner; public class TestPrimitives { public static void main(String[] args) { Scanner input; // Integers input = new Scanner(System.in); System.out.print(&quot;Enter an integer: &quot;); try { int sampleInputInt = input.nextInt(); System.out.println(sampleInputInt); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer, &quot; + e); } input.close(); // Doubles input = new Scanner(System.in); System.out.print(&quot;Enter a double: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double, &quot; + e); } input.close(); // Booleans input = new Scanner(System.in); System.out.print(&quot;Enter a boolean: &quot;); try { boolean sampleInputBoolean = input.nextBoolean(); System.out.println(sampleInputBoolean); } catch (Exception e) { // if not true or false System.out.println(&quot;Not an boolean, &quot; + e); } input.close(); // Wrapper Class Strings input = new Scanner(System.in); System.out.print(&quot;Enter a String: &quot;); try { String sampleInputString = input.nextLine(); System.out.println(sampleInputString); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); } } TestPrimitives.main(null); . Enter an integer: 3 Enter a double: 3.3 Enter a boolean: true Enter a String: AP CSA is awesome .",
            "url": "https://yashshah138.github.io/Fastpages/week%201/2022/08/24/Primitives.html",
            "relUrl": "/week%201/2022/08/24/Primitives.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Python Kernel Notebook",
            "content": "print(&quot;Welcome to my Python Kernel Notebook!!&quot;) . Welcome to my Python Kernel Notebook!! .",
            "url": "https://yashshah138.github.io/Fastpages/2022/08/22/Python-Notebook.html",
            "relUrl": "/2022/08/22/Python-Notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Java Kernel Notebook",
            "content": "class HelloWorld { public static void main(String args[]) { System.out.println(&quot;Welcome to my Java Kernel Notebook!!&quot;); } } HelloWorld.main(null) . Welcome to my Java Kernel Notebook!! . System.out.println(&quot;Welcome to my Java Kernel Notebook!!&quot;) . Welcome to my Java Kernel Notebook!! .",
            "url": "https://yashshah138.github.io/Fastpages/week%200/2022/08/22/Java-Notebook.html",
            "relUrl": "/week%200/2022/08/22/Java-Notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "First Post to Fastpages",
            "content": "Welcome to my website! . Posts will be updated and added throughout the trimester as I learn more. . What is this? . This is a website that uses fastpages. This tool allows for easy creation of a website through the use of jupyter notebooks and markdown files. Here I will have my learnings and notes from throughout the trimester. .",
            "url": "https://yashshah138.github.io/Fastpages/week%200/2022/08/21/first-post.html",
            "relUrl": "/week%200/2022/08/21/first-post.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://yashshah138.github.io/Fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "About Yash Shah . . I am a senior at Del Norte High School and am taking AP Computer Science A. My goal for this class is to learn Java, develop the soft skills needed to work in the computer science field, and have fun! . . My professional goal is to major in computer science with a specialization in machine learning and artificial intelligence with a minor in automotive engineering and finance. . . Some of my hobbies include building LEGOs, hanging out with friends, traveling with family, and photography. I also love tinkering with different things related to computer science. For example, I made my own vpn using AWS and some open-source software over the summer. .",
          "url": "https://yashshah138.github.io/Fastpages/about",
          "relUrl": "/about",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "College Board",
          "content": "This page will be used to display the learnings from College Board and its requirements. . Table of Contents (ToC) . Unit 1 - Primitive Types | Unit 2 - Using Objects | Unit 3 - Boolean Expressions and if Statements | Unit 4 - Iteration | Unit 5 - Writing Classes | Unit 6 - Array | Unit 7 - ArrayList | Unit 8 - 2D Array | Unit 9 - Inheritance | Unit 10 - Recursion | . (links will be added as we go) .",
          "url": "https://yashshah138.github.io/Fastpages/notes",
          "relUrl": "/notes",
          "date": ""
      }
      
  

  

  

  
      ,"page5": {
          "title": "",
          "content": "Welcome to my fastpages for AP Computer Science A. Here I will show my notes and learnings from this class. . Blogs .",
          "url": "https://yashshah138.github.io/Fastpages/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://yashshah138.github.io/Fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}
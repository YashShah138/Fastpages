{
  
    
        "post0": {
            "title": "Bash Kernel Basics Notebook",
            "content": "echo &quot;List of all files in the root folder ... &quot; cd vscode/Fastpages ls echo &quot;&quot; echo &quot;List of all files in the repository including all hidden files:&quot; cd vscode/Fastpages ls -a . List of all files in the root folder: 2022-05-15-07-21-16.png _config.yml _sass 2022-05-15-07-24-25.png _fastpages_docs _word 2022-05-15-07-25-15.png _includes assets Gemfile _layouts docker-compose.yml LICENSE _notebooks images Makefile _pages index.html README.md _plugins _action_files _posts List of all files in the repository including all hidden files: bash: cd: vscode/Fastpages: No such file or directory . 2022-05-15-07-25-15.png _pages .. Gemfile _plugins .DS_Store LICENSE _posts .devcontainer.json Makefile _sass .git README.md _word .gitattributes _action_files assets .github _config.yml docker-compose.yml .gitignore _fastpages_docs images .vscode _includes index.html 2022-05-15-07-21-16.png _layouts 2022-05-15-07-24-25.png _notebooks . Hack 1 - Is there anything we use to verify tools we install? . echo &quot;Checking versions and existence of python and java ... &quot; python3 --version python2 --version java --version javac --version . Checking versions and existence of python and java: Python 3.9.12 Python 2.7.18 java 11.0.12 2021-07-20 LTS Java(TM) SE Runtime Environment 18.9 (build 11.0.12+8-LTS-237) Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.12+8-LTS-237, mixed mode) javac 11.0.12 . Hack 2 - Is there anything we could verify with Anaconda? . echo &quot;Running checks with Anaconda ... &quot; conda --version echo &quot;&quot; conda list python . Running checks with Anaconda: conda 4.13.0 # packages in environment at /Users/yash/opt/anaconda3: # # Name Version Build Channel ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 msgpack-python 1.0.2 py39hf7b0b51_1 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 . Hack 3 - How would you update a repository? . cd ~/vscode/Fastpages git pull . Already up to date. . Hack 4 - Really cool would be automating a procedure from installation! . This is a small script to show understanding of BASH . echo &quot;&quot; echo &quot;This script will create a file in the _pages directory and will put all files inside including hidden files.&quot; cd ~ echo &quot;&quot; cd vscode/Fastpages/_pages ls touch 06_bash.md cd ~ ls -al &gt; vscode/Fastpages/_pages/06_bash.md echo &quot;&quot; echo &quot;vscode/Fastpages/_pages/06_bash.md&quot; nl vscode/Fastpages/_pages/06_bash.md . This script will create a file in the _pages directory and will put all files inside including hidden files. 01_notes.md 03_about.md 05_tags.html 404.html 02_vocab.md 04_search.html 06_bash.md vscode/Fastpages/_pages/06_bash.md 1 total 208 2 drwxr-xr-x+ 55 yash staff 1760 Aug 26 09:06 . 3 drwxr-xr-x 6 root admin 192 Aug 10 23:44 .. 4 -r-- 1 yash staff 7 Oct 2 2019 .CFUserTextEncoding 5 -rw-r--r--@ 1 yash staff 14340 Aug 23 10:43 .DS_Store 6 drwx 183 yash staff 5856 Aug 26 09:40 .Trash 7 drwxr-xr-x 3 yash staff 96 Oct 20 2021 .android 8 -rw- 1 yash staff 12711 Aug 26 09:11 .bash_history 9 -rw-r--r-- 1 yash staff 1331 Aug 18 08:54 .bash_profile 10 -rw-r--r-- 1 yash staff 672 Oct 4 2021 .bash_profile.pysave 11 drwx 30 yash staff 960 Aug 26 09:11 .bash_sessions 12 drwxr-xr-x 3 yash staff 96 Aug 18 22:40 .cache 13 drwxrwsr-x 3 yash staff 96 Aug 18 08:59 .conda 14 drwxr-xr-x 6 yash staff 192 Aug 21 23:39 .config 15 drwx 3 yash staff 96 Jun 2 2020 .cups 16 -rw-r--r-- 1 yash staff 208 Aug 26 2021 .gitconfig 17 drwxr-xr-x 4 yash staff 128 Sep 21 2021 .gradle 18 drwxr-xr-x 5 yash staff 160 May 1 19:15 .idlerc 19 drwxr-xr-x 3 yash staff 96 Mar 4 08:34 .ipython 20 drwxr-xr-x 3 yash staff 96 Aug 18 08:59 .jupyter 21 drwxr-xr-x 3 yash staff 96 Apr 12 10:14 .keras 22 -rw- 1 yash staff 20 May 6 12:04 .lesshst 23 drwxr-xr-x 3 yash staff 96 Aug 19 14:15 .m2 24 drwxr-xr-x 2 yash staff 64 Mar 8 13:25 .matplotlib 25 drwxr-xr-x 3 yash staff 96 Aug 18 09:21 .node-gyp 26 drwxr-xr-x 8 yash staff 256 Aug 21 23:44 .npm 27 drwxr-xr-x 3 yash staff 96 Mar 26 2021 .oracle_jre_usage 28 drwx 3 yash staff 96 Apr 12 11:25 .putty 29 -rw- 1 yash staff 51 Aug 27 2021 .python_history 30 drwxr-xr-x 3 yash staff 96 Aug 19 08:42 .redhat 31 drwx 6 yash staff 192 Aug 12 19:04 .ssh 32 drwxr-xr-x 3 yash staff 96 Aug 18 22:43 .sts4 33 -rw-r--r-- 1 yash staff 314 Aug 18 08:54 .tcshrc 34 -rw- 1 yash staff 1071 Aug 26 2021 .viminfo 35 drwxr-xr-x 4 yash staff 128 Feb 28 10:51 .vscode 36 -rw-r--r-- 1 yash staff 165 Aug 18 09:23 .wget-hsts 37 -rw-r--r-- 1 yash staff 597 Aug 18 08:54 .xonshrc 38 -rw-r--r-- 1 yash staff 248 Aug 21 23:32 .zprofile 39 -rw- 1 yash staff 18722 Aug 26 09:06 .zsh_history 40 drwx 68 yash staff 2176 Aug 26 09:06 .zsh_sessions 41 -rw-r--r-- 1 yash staff 490 Aug 18 08:54 .zshrc 42 drwx@ 5 yash staff 160 Nov 16 2021 Applications 43 drwx@ 4 yash staff 128 Aug 24 14:35 Creative Cloud Files 44 drwx@ 7 yash staff 224 Jul 11 21:15 Desktop 45 drwx@ 8 yash staff 256 May 11 10:34 Documents 46 drwx@ 48 yash staff 1536 Aug 25 22:44 Downloads 47 drwx@ 104 yash staff 3328 Aug 24 14:19 Library 48 drwx+ 9 yash staff 288 Dec 8 2021 Movies 49 drwx+ 10 yash staff 320 May 11 10:09 Music 50 drwx+ 7 yash staff 224 Dec 14 2020 Pictures 51 drwxr-x+ 4 yash staff 128 Oct 2 2019 Public 52 drwxr-xr-x 4 yash staff 128 Mar 5 2021 Samsung 53 drwxr-xr-x 5 yash staff 160 May 5 2019 java 54 drwxr-xr-x 3 yash staff 96 Aug 18 08:41 opt 55 drwxr-xr-x 8 yash staff 256 Aug 25 08:55 vscode 56 -rw-r--r--@ 1 yash staff 162 Feb 16 2021 ~$mes_Final.docx .",
            "url": "https://yashshah138.github.io/Fastpages/2022/08/25/Bash-Tutorial.html",
            "relUrl": "/2022/08/25/Bash-Tutorial.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Primitive Data Types",
            "content": "Notes on Primitive Data Types . There are two main types of data structures, primitive and non-primitive. Strings, arrays, etc. are examples of non-primitive data types. .",
            "url": "https://yashshah138.github.io/Fastpages/markdown/2022/08/23/Primitive-Data-Types.html",
            "relUrl": "/markdown/2022/08/23/Primitive-Data-Types.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Python Kernel Notebook",
            "content": "print(&quot;Welcome to my Python Kernel Notebook!!&quot;) . Welcome to my Python Kernel Notebook!! .",
            "url": "https://yashshah138.github.io/Fastpages/2022/08/22/Python-Notebook.html",
            "relUrl": "/2022/08/22/Python-Notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Java Kernel Notebook",
            "content": "class HelloWorld { public static void main(String args[]) { System.out.println(&quot;Welcome to my Java Kernel Notebook!!&quot;); } } HelloWorld.main(null) . Welcome to my Java Kernel Notebook!! . System.out.println(&quot;Welcome to my Java Kernel Notebook!!&quot;) . Welcome to my Java Kernel Notebook!! .",
            "url": "https://yashshah138.github.io/Fastpages/2022/08/22/Java-Notebook.html",
            "relUrl": "/2022/08/22/Java-Notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "First Post to Fastpages",
            "content": "Welcome to my website! . Posts will be updated and added throughout the trimester as I learn more. . What is this? . This is a website that uses fastpages. This tool allows for easy creation of a website through the use of jupyter notebooks and markdown files. Here I will have my learnings and notes from throughout the trimester. .",
            "url": "https://yashshah138.github.io/Fastpages/markdown/2022/08/21/first-post.html",
            "relUrl": "/markdown/2022/08/21/first-post.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://yashshah138.github.io/Fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  
      ,"page0": {
          "title": "Notes",
          "content": "This is my notes page .",
          "url": "https://yashshah138.github.io/Fastpages/notes",
          "relUrl": "/notes",
          "date": ""
      }
      
  

  
      ,"page1": {
          "title": "Vocab",
          "content": "This page will be used to display the vocab I learned from AP CSA. .",
          "url": "https://yashshah138.github.io/Fastpages/vocab",
          "relUrl": "/vocab",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://yashshah138.github.io/Fastpages/about",
          "relUrl": "/about",
          "date": ""
      }
      
  

  

  

  

  
      ,"page6": {
          "title": "",
          "content": "Welcome to my fastpages for AP Computer Science A. Here I will show my notes and learnings from this class. . Blogs .",
          "url": "https://yashshah138.github.io/Fastpages/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://yashshah138.github.io/Fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}
{
  
    
        "post0": {
            "title": "ArrayLists",
            "content": "Lists and ArrayLists . Function What It Does . add(int index, element) | This method is used to add an element at a particular index in the list. When a single parameter is passed, it simply adds the element at the end of the list. | . addAll(int index, Collection collection) | This method is used to add all the elements in the given collection to the list. When a single parameter is passed, it adds all the elements of the given collection at the end of the list. | . size() | This method is used to return the size of the list. | . clear() | This method is used to remove all the elements in the list. However, the reference of the list created is still stored. | . remove(int index) | This method removes an element from the specified index. It shifts subsequent elements(if any) to left and decreases their indexes by 1. | . remove(element) | This method is used to remove the first occurrence of the given element in the list. | . get(int index) | This method returns elements at the specified index. | . set(int index, element) | This method replaces elements at a given index with the new element. This function returns the element which was just replaced by a new element. | . indexOf(element) | This method returns the first occurrence of the given element or -1 if the element is not present in the list. | . lastIndexOf(element) | This method returns the last occurrence of the given element or -1 if the element is not present in the list. | . equals(element) | This method is used to compare the equality of the given element with the elements of the list. | . hashCode() | This method is used to return the hashcode value of the given list. | . isEmpty() | This method is used to check if the list is empty or not. It returns true if the list is empty, else false. | . contains(element) | This method is used to check if the list contains the given element or not. It returns true if the list contains the element. | . containsAll(Collection collection) | This method is used to check if the list contains all the collection of elements. | . sort(Comparator comp) | This method is used to sort the elements of the list on the basis of the given comparator. | . import java.util.ArrayList; import java.util.Comparator; // Create an ArrayList object ArrayList&lt;String&gt; artists = new ArrayList&lt;String&gt;(); // add(int index, element) artists.add(&quot;Taylor Swift&quot;); artists.add(&quot;50 Cent&quot;); artists.add(&quot;Miley Cyrus&quot;); System.out.println(&quot;- add(int index, element)&quot;); System.out.println(artists + &quot; n&quot;); // addAll(int index, Collection collection) ArrayList&lt;String&gt; songs = new ArrayList&lt;String&gt;(); songs.add(&quot;Shake It Off&quot;); songs.add(&quot;In Da Club&quot;); songs.add(&quot;Party In The USA&quot;); artists.addAll(songs); System.out.println(&quot;- addAll(int index, Collection collection)&quot;); System.out.println(artists + &quot; n&quot;); // size() System.out.println(&quot;- size()&quot;); System.out.println(&quot;There are &quot; + artists.size() + &quot; terms in the ArrayList artists&quot;); System.out.println(&quot;There are &quot; + songs.size() + &quot; terms in the ArrayList songs&quot; + &quot; n&quot;); // clear() songs.clear(); System.out.println(&quot;- clear()&quot;); System.out.println(songs+ &quot; n&quot;); // remove(int index) artists.remove(5); System.out.println(&quot;- remove(int index)&quot;); System.out.println(artists + &quot; n&quot;); // remove(element) artists.remove(&quot;Miley Cyrus&quot;); System.out.println(&quot;- remove(element)&quot;); System.out.println(artists + &quot; n&quot;); // get(int index) System.out.println(&quot;- get(int index)&quot;); System.out.println(artists.get(1) + &quot; n&quot;); // set(int index, element) artists.set(3, &quot;Candy Shop&quot;); System.out.println(&quot;- set(int index, element)&quot;); System.out.println(artists + &quot; n&quot;); // indexOf(element) System.out.println(&quot;- indexOf(element)&quot;); System.out.println(artists.indexOf(&quot;50 Cent&quot;) + &quot; n&quot;); // lastIndexOf(element) System.out.println(&quot;- lastIndexOf(element)&quot;); System.out.println(artists.indexOf(&quot;Candy Shop&quot;) + &quot; n&quot;); // equals(element) System.out.println(&quot;- equals(element)&quot;); System.out.println(artists.equals(&quot;Snoop Dogg&quot;)); // hashCode() System.out.println(&quot; n&quot; + &quot;- hashCode()&quot;); System.out.println(artists.hashCode() + &quot; n&quot;); // isEmpty() System.out.println(&quot;- isEmpyty()&quot;); System.out.println(artists.isEmpty() + &quot; n&quot;); // contains(element) System.out.println(&quot;- contains(element)&quot;); System.out.println(artists.contains(&quot;50&quot;) + &quot; n&quot;); // containsAll(Collection collection) System.out.println(&quot;- containsAll(Collection collection)&quot;); System.out.println(artists.contains(songs) + &quot; n&quot;); // sort(Comparator comp) System.out.println(&quot;- sort(Comparator comp)&quot;); artists.sort(Comparator.naturalOrder()); System.out.println(artists); . - add(int index, element) [Taylor Swift, 50 Cent, Miley Cyrus] - addAll(int index, Collection collection) [Taylor Swift, 50 Cent, Miley Cyrus, Shake It Off, In Da Club, Party In The USA] - size() There are 6 terms in the ArrayList artists There are 3 terms in the ArrayList songs - clear() [] - remove(int index) [Taylor Swift, 50 Cent, Miley Cyrus, Shake It Off, In Da Club] - remove(element) [Taylor Swift, 50 Cent, Shake It Off, In Da Club] - get(int index) 50 Cent - set(int index, element) [Taylor Swift, 50 Cent, Shake It Off, Candy Shop] - indexOf(element) 1 - lastIndexOf(element) 3 - equals(element) false - hashCode() -1198696971 - isEmpyty() false - contains(element) false - containsAll(Collection collection) false - sort(Comparator comp) [50 Cent, Candy Shop, Shake It Off, Taylor Swift] .",
            "url": "https://yashshah138.github.io/Fastpages/week-7/2022/10/10/ArrayLists.html",
            "relUrl": "/week-7/2022/10/10/ArrayLists.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Arrays and Images",
            "content": "Image Manipulation . Continue to work with Classes, Arrays, and 2D arrays. . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String greyScaleFile; private String redScaleFile; private String blueScaleFile; private String greenScaleFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.greyScaleFile = this.outDir + &quot;Grey_&quot; + name + &quot;.&quot; + ext; this.redScaleFile = this.outDir + &quot;Red_&quot; + name + &quot;.&quot; + ext; this.blueScaleFile = this.outDir + &quot;Blue_&quot; + name + &quot;.&quot; + ext; this.greenScaleFile = this.outDir + &quot;Green_&quot; + name + &quot;.&quot; + ext; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i+=3) { for (int j = 0; j &lt; img.getWidth(); j+=1) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } public void greyScale() { BufferedImage img = null; try { File file = new File(this.greyScaleFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); int grey = (int)(col.getRed()*0.3 + col.getGreen()*0.59 + col.getBlue()*0.11); try { Color rgb = new Color(grey, grey, grey); img.setRGB(j, i, rgb.getRGB()); } catch (Exception ex) { } } } try { ImageIO.write(img, &quot;png&quot;, new File(this.greyScaleFile)); } catch (Exception ex) { } } public void redScale() { BufferedImage img = null; try { File file = new File(this.redScaleFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); int red = (int)(col.getRed()); try { Color rgb = new Color(red, 0, 0); img.setRGB(j, i, rgb.getRGB()); } catch (Exception ex) { } } } try { ImageIO.write(img, &quot;png&quot;, new File(this.redScaleFile)); } catch (Exception ex) { } } public void greenScale() { BufferedImage img = null; try { File file = new File(this.greenScaleFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); int green = (int)(col.getGreen()); try { Color rgb = new Color(0, green, 0); img.setRGB(j, i, rgb.getRGB()); } catch (Exception ex) { } } } try { ImageIO.write(img, &quot;png&quot;, new File(this.greenScaleFile)); } catch (Exception ex) { } } public void blueScale() { BufferedImage img = null; try { File file = new File(this.blueScaleFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); int blue = (int)(col.getBlue()); try { Color rgb = new Color(0, 0, blue); img.setRGB(j, i, rgb.getRGB()); } catch (Exception ex) { } } } try { ImageIO.write(img, &quot;png&quot;, new File(this.blueScaleFile)); } catch (Exception ex) { } } // tester/driver public static void main(String[] args) throws IOException { Pics ascii = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); ascii.printStats(&quot;Original&quot;); ascii.resize(33); ascii.printStats(&quot;Scaled&quot;); ascii.convertToAscii(); Pics grey = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); grey.greyScale(); Pics red = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); red.redScale(); Pics green = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); green.greenScale(); Pics blue = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); blue.blueScale(); } } Pics.main(null); . Original: 227380 389x413 images/MonaLisa.png Scaled: 23777 128x136 images/tmp/MonaLisa.png . ASCII: https://github.com/YashShah138/Fastpages/blob/master/_notebooks/images/tmp/MonaLisa.txt .",
            "url": "https://yashshah138.github.io/Fastpages/week-6/2022/10/03/Arrays-And-Images.html",
            "relUrl": "/week-6/2022/10/03/Arrays-And-Images.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "APIs",
            "content": "import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; // RapidAPI header https://rapidapi.com/dariuxmx/api/formula-1-standings/ HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://formula-1-standings.p.rapidapi.com/races&quot;)) .header(&quot;X-RapidAPI-Key&quot;, &quot;80e73128e0mshda8c95123266391p176951jsnbc06ff234f92&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;formula-1-standings.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); // RapidAPI request and response HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); // RapidAPI Body System.out.println(response.body()); . {&#34;results&#34;:[{&#34;race_name&#34;:&#34;Pre-Season Testing 2022&#34;,&#34;race_date&#34;:&#34;10 – 12 March 2022&#34;,&#34;race_location&#34;:&#34;Bahrain International Circuit, Bahrain&#34;},{&#34;race_name&#34;:&#34;Bahrain Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;18 – 20 March 2022&#34;,&#34;race_location&#34;:&#34;Bahrain International Circuit, Bahrain&#34;},{&#34;race_name&#34;:&#34;Saudi Arabian Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;25 – 27 March 2022&#34;,&#34;race_location&#34;:&#34;Jeddah Corniche Circuit, Saudi Arabia&#34;},{&#34;race_name&#34;:&#34;Australian Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;8 – 10 April 2022&#34;,&#34;race_location&#34;:&#34;Melbourne Grand Prix Circuit, Australia&#34;},{&#34;race_name&#34;:&#34;Emilia Romagna Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;22 – 24 April 2022&#34;,&#34;race_location&#34;:&#34;Autodromo Enzo e Dino Ferrari, Italy&#34;},{&#34;race_name&#34;:&#34;Miami Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;6 – 8 May 2022&#34;,&#34;race_location&#34;:&#34;Miami International Autodrome, United States&#34;},{&#34;race_name&#34;:&#34;Spanish Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;20 – 22 May 2022&#34;,&#34;race_location&#34;:&#34;Circuit de Barcelona-Catalunya, Spain&#34;},{&#34;race_name&#34;:&#34;Monaco Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;27 – 29 May 2022&#34;,&#34;race_location&#34;:&#34;Circuit de Monaco, Monaco&#34;},{&#34;race_name&#34;:&#34;Azerbaijan Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;10 – 12 June 2022&#34;,&#34;race_location&#34;:&#34;Baku City Circuit, Azerbaijan&#34;},{&#34;race_name&#34;:&#34;Canadian Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;17 – 19 June 2022&#34;,&#34;race_location&#34;:&#34;Circuit Gilles Villeneuve, Canada&#34;},{&#34;race_name&#34;:&#34;British Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;1 – 3 July 2022&#34;,&#34;race_location&#34;:&#34;Silverstone Circuit, United Kingdom&#34;},{&#34;race_name&#34;:&#34;Austrian Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;8 – 10 July 2022&#34;,&#34;race_location&#34;:&#34;Red Bull Ring, Austria&#34;},{&#34;race_name&#34;:&#34;French Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;22 – 24 July 2022&#34;,&#34;race_location&#34;:&#34;Circuit Paul Ricard, France&#34;},{&#34;race_name&#34;:&#34;Hungarian Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;29 – 31 July 2022&#34;,&#34;race_location&#34;:&#34;Hungaroring, Hungary&#34;},{&#34;race_name&#34;:&#34;Belgian Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;26 – 28 August 2022&#34;,&#34;race_location&#34;:&#34;Circuit de Spa-Francorchamps, Belgium&#34;},{&#34;race_name&#34;:&#34;Dutch Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;2 – 4 September 2022&#34;,&#34;race_location&#34;:&#34;Circuit Zandvoort, Netherlands&#34;},{&#34;race_name&#34;:&#34;Italian Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;9 – 11 September 2022&#34;,&#34;race_location&#34;:&#34;Autodromo Nazionale Monza, Italy&#34;},{&#34;race_name&#34;:&#34;Singapore Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;30 September – 2 October 2022&#34;,&#34;race_location&#34;:&#34;Marina Bay Street Circuit, Singapore&#34;},{&#34;race_name&#34;:&#34;Japanese Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;7 – 9 October 2022&#34;,&#34;race_location&#34;:&#34;Suzuka International Racing Course, Japan&#34;},{&#34;race_name&#34;:&#34;United States Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;21 – 23 October 2022&#34;,&#34;race_location&#34;:&#34;Circuit of the Americas, United States&#34;},{&#34;race_name&#34;:&#34;Mexico City Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;28 – 30 October 2022&#34;,&#34;race_location&#34;:&#34;Autodromo Hermanos Rodriguez, Mexico&#34;},{&#34;race_name&#34;:&#34;São Paulo Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;11 – 13 November 2022&#34;,&#34;race_location&#34;:&#34;Autódromo José Carlos Pace, Brazil&#34;},{&#34;race_name&#34;:&#34;Abu Dhabi Grand Prix 2022&#34;,&#34;race_date&#34;:&#34;18 – 20 November 2022&#34;,&#34;race_location&#34;:&#34;Yas Marina Circuit, United Arab Emirates&#34;}]} .",
            "url": "https://yashshah138.github.io/Fastpages/week-6/2022/10/03/APIs.html",
            "relUrl": "/week-6/2022/10/03/APIs.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Virtual Private Networks",
            "content": "What Are Virtual Private Networks (VPN) . VPNs establish a protected network connection when using public networks. VPNs encrypt your internet traffic and disguise your online identity. This makes it more difficult for third parties to track your activities online and steal data. . How Does A VPN Work . A VPN hides your IP address by letting the network redirect it through a specially configured remote server run by a VPN host. This means that if you surf online with a VPN, the VPN server becomes the source of your data. This means your Internet Service Provider (ISP) and other third parties cannot see which websites you visit or what data you send and receive online. A VPN works like a filter that turns all your data into “gibberish”. Even if someone were to get their hands on your data, it would be useless. . Setting Up A VPN (MacOS) . Navigate to your browser and search for a VPN and follow the websites directions for installation | Go to “System Preferences” and then “Network” | Click on the plus sign in the bottom left corner and use the drop-down menu to choose your VPN | Fill in the details for your chosen VPN in the fields “VPN Type” and “Service Name” | Create a new VPN network and fill in your “Server Address,” “Remote ID” and “Local ID” | Enter “Authentication Settings” and add your username and password | Click “OK” and Connect your VPN | Setting Up A VPN (Windows) . Navigate to your browser and search for a VPN and follow the websites directions for installation | Move into “Settings” and click on “Network” and then “VPN” | Click “Add a VPN” and fill out the fields for “Server Name,” “VPN Type” and your account information, which should be shared by the VPN provider you chose | Save your VPN | Go back into “VPN,” click on your newly added account and press “Connect” | Using A VPN . There are a host of different reasons to use a VPN. Below, I have listed a few reasons to sue a VPN . Make public Wi-Fi more secure | Protect your mobile devices | Hide your IP address | Data Privacy From Your Internet Service Provider | Data Privacy From the Apps and Services You Use | Access to Any Content in Any Place (Streaming shows that are on other countries Netflix) | . Recommended Software (Free) . Proton VPN Free | Privado VPN | Windscribe | Atlas VPN | Hide.me | . Recommended Software (Paid) . ExpressVPN (~$9/month) | SurfShark ($5/month) | NordVPN ($3.69/month for 2 years) | ProtonVPN ($6/month) | IPVanish ($3.33/month for the first year, then $7.5/month) | .",
            "url": "https://yashshah138.github.io/Fastpages/extras/2022/09/27/VPNs.html",
            "relUrl": "/extras/2022/09/27/VPNs.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Tic Tac Toe",
            "content": "// A simple program to demonstrate // Tic-Tac-Toe Game. import java.util.*; public class GFG { static String[] board; static String turn; // CheckWinner method will // decide the combination // of three box given below. static String checkWinner() { for (int a = 0; a &lt; 8; a++) { String line = null; switch (a) { case 0: line = board[0] + board[1] + board[2]; break; case 1: line = board[3] + board[4] + board[5]; break; case 2: line = board[6] + board[7] + board[8]; break; case 3: line = board[0] + board[3] + board[6]; break; case 4: line = board[1] + board[4] + board[7]; break; case 5: line = board[2] + board[5] + board[8]; break; case 6: line = board[0] + board[4] + board[8]; break; case 7: line = board[2] + board[4] + board[6]; break; } //For X winner if (line.equals(&quot;XXX&quot;)) { return &quot;X&quot;; } // For O winner else if (line.equals(&quot;OOO&quot;)) { return &quot;O&quot;; } } for (int a = 0; a &lt; 9; a++) { if (Arrays.asList(board).contains( String.valueOf(a + 1))) { break; } else if (a == 8) { return &quot;draw&quot;; } } // To enter the X Or O at the exact place on board. System.out.println(turn + &quot;&#39;s turn; enter a slot number to place &quot; + turn + &quot; in: &quot;); return null; } // To print out the board. /* |||| | 1 | 2 | 3 | |--| | 4 | 5 | 6 | |--| | 7 | 8 | 9 | ||||*/ static void printBoard() { System.out.println(&quot;||||&quot;); System.out.println(&quot;| &quot; + board[0] + &quot; | &quot; + board[1] + &quot; | &quot; + board[2] + &quot; |&quot;); System.out.println(&quot;|--|&quot;); System.out.println(&quot;| &quot; + board[3] + &quot; | &quot; + board[4] + &quot; | &quot; + board[5] + &quot; |&quot;); System.out.println(&quot;|--|&quot;); System.out.println(&quot;| &quot; + board[6] + &quot; | &quot; + board[7] + &quot; | &quot; + board[8] + &quot; |&quot;); System.out.println(&quot;||||&quot;); } public static void main(String[] args) { Scanner in = new Scanner(System.in); board = new String[9]; turn = &quot;X&quot;; String winner = null; for (int a = 0; a &lt; 9; a++) { board[a] = String.valueOf(a + 1); } System.out.println(&quot;Welcome to 3x3 Tic Tac Toe.&quot;); printBoard(); System.out.println(&quot;X will play first. Enter a slot number to place X in: &quot;); while (winner == null) { int numInput; // Exception handling. // numInput will take input from user like from 1 to 9. // If it is not in range from 1 to 9. // then it will show you an error &quot;Invalid input.&quot; try { numInput = in.nextInt(); if (!(numInput &gt; 0 &amp;&amp; numInput &lt;= 9)) { System.out.println( &quot;Invalid input; re-enter slot number:&quot;); continue; } } catch (InputMismatchException e) { System.out.println( &quot;Invalid input; re-enter slot number:&quot;); continue; } // This game has two player x and O. // Here is the logic to decide the turn. if (board[numInput - 1].equals( String.valueOf(numInput))) { board[numInput - 1] = turn; if (turn.equals(&quot;X&quot;)) { turn = &quot;O&quot;; } else { turn = &quot;X&quot;; } printBoard(); winner = checkWinner(); } else { System.out.println( &quot;Slot already taken; re-enter slot number:&quot;); } } // If no one win or lose from both player x and O. // then here is the logic to print &quot;draw&quot;. if (winner.equalsIgnoreCase(&quot;draw&quot;)) { System.out.println( &quot;It&#39;s a draw! Thanks for playing.&quot;); } // For winner -to display Congratulations! message. else { System.out.println( &quot;Congratulations! &quot; + winner + &quot; won! Thanks for playing.&quot;); } } } GFG.main(null); . Welcome to 3x3 Tic Tac Toe. |||| | 1 | 2 | 3 | |--| | 4 | 5 | 6 | |--| | 7 | 8 | 9 | |||| X will play first. Enter a slot number to place X in: |||| | X | 2 | 3 | |--| | 4 | 5 | 6 | |--| | 7 | 8 | 9 | |||| O&#39;s turn; enter a slot number to place O in: |||| | X | 2 | O | |--| | 4 | 5 | 6 | |--| | 7 | 8 | 9 | |||| X&#39;s turn; enter a slot number to place X in: |||| | X | 2 | O | |--| | X | 5 | 6 | |--| | 7 | 8 | 9 | |||| O&#39;s turn; enter a slot number to place O in: |||| | X | 2 | O | |--| | X | 5 | O | |--| | 7 | 8 | 9 | |||| X&#39;s turn; enter a slot number to place X in: |||| | X | 2 | O | |--| | X | 5 | O | |--| | X | 8 | 9 | |||| Congratulations! X won! Thanks for playing. .",
            "url": "https://yashshah138.github.io/Fastpages/week-5/extras/2022/09/26/Tic-Tac-Toe.html",
            "relUrl": "/week-5/extras/2022/09/26/Tic-Tac-Toe.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "JavaScript Tutorial",
            "content": "Output To Console . // Print Hello World console.log(&quot;Hello World!&quot;); // Print Using var assignment var text = &quot;AP CSA IS GREAT!!&quot;; console.log(text); // Print Using Functions var message = &quot;Class of 2022&quot; function print(output) { console.log(output); } print(message); // Print Reusing Functions print(&quot;RAYJ is the best team!&quot;); . Hello World! AP CSA IS GREAT!! Class of 2022 RAYJ is the best team! . function printType(output) { console.log(typeof output + &quot;: &quot; + output); } printType(&quot;AP CSA&quot;); printType(2023); printType([1, 2, 3]); . string: AP CSA number: 2023 object: 1,2,3 . Building a Person Class + JSON . // define a function to hold data for a Person function Person(name, song, artist, releaseYear) { this.name = name; this.song = song; this.artist = artist; this.releaseYear = releaseYear; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, song: this.song, artist: this.artist, releaseYear: this.releaseYear, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable sponsor var sponsor = new Person(&quot;Mr. M&quot;, &quot;Stayin&#39; Alive&quot;, &quot;Bee Gees&quot;, 1977); // object type is easy to work with in JavaScript printType(sponsor); // before role printType(sponsor.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with sponsor sponsor.setRole(&quot;Sponsor&quot;); // set the role printType(sponsor); printType(sponsor.toJSON()); . object: [object Object] string: {&#34;name&#34;:&#34;Mr. M&#34;,&#34;song&#34;:&#34;Stayin&#39; Alive&#34;,&#34;artist&#34;:&#34;Bee Gees&#34;,&#34;releaseYear&#34;:1977,&#34;role&#34;:&#34;&#34;} object: [object Object] string: {&#34;name&#34;:&#34;Mr. M&#34;,&#34;song&#34;:&#34;Stayin&#39; Alive&#34;,&#34;artist&#34;:&#34;Bee Gees&#34;,&#34;releaseYear&#34;:1977,&#34;role&#34;:&#34;Sponsor&#34;} . // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, song: this.song, artist: this.artist, releaseYear: this.releaseYear, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable sponsor var sponsor = new Person(&quot;Mr. M&quot;, &quot;Stayin&#39; Alive&quot;, &quot;Bee Gees&quot;, 1977); // object type is easy to work with in JavaScript printType(sponsor.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with sponsor sponsor.setRole(&quot;Sponsor&quot;); // set the role printType(sponsor.toJSON()); // define a student Array of Person(s) var teammate = [ new Person(&quot;Rithwikh&quot;, &quot;Drop It Like It&#39;s Hot&quot;, &quot;Snoop Dogg&quot;, 2004), new Person(&quot;Aidan&quot;, &quot;Ms. Jackson&quot;, &quot;OutKast&quot;, 2000), new Person(&quot;Jun&quot;, &quot;Ignition&quot;, &quot;R. Kelly&quot;, 2002), new Person(&quot;Yash&quot;, &quot;In Da Club&quot;, &quot;50 Cent&quot;, 2003) ]; // define a Team and build Team objects and json function Team(sponsor, teammate){ // 1 sponsor, many student // start Team with sponsor sponsor.setRole(&quot;Sponsor&quot;); this.sponsor = sponsor; this.Team = [sponsor]; // add each Student to Team this.teammate = teammate; this.teammate.forEach(teammate =&gt; { teammate.setRole(&quot;Teammate&quot;); this.Team.push(teammate); }); // build json/string format of Team this.json = []; this.Team.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci Team from formerly defined sponsor and students compsci = new Team(sponsor, teammate); // define an HTML conversion &quot;method&quot; associated with Team Team.prototype._toHtml = function() { // HTML Style is build using inline structure /* var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); */ // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;strong&gt;&quot; + &quot;Name&quot; + &quot;&lt;/strong&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;strong&gt;&quot; + &quot;Age&quot; + &quot;&lt;/strong&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;strong&gt;&quot; + &quot;Artist&quot; + &quot;&lt;/strong&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;strong&gt;&quot; + &quot;Release Year&quot; + &quot;&lt;/strong&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;strong&gt;&quot; + &quot;Role&quot; + &quot;&lt;/strong&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.Team for (var row in compsci.Team) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + compsci.Team[row].name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.Team[row].song + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.Team[row].artist + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.Team[row].releaseYear + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.Team[row].role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return (&quot;&lt;div style=&#39;&quot; + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot;); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . string: {&#34;name&#34;:&#34;Mr. M&#34;,&#34;song&#34;:&#34;Stayin&#39; Alive&#34;,&#34;artist&#34;:&#34;Bee Gees&#34;,&#34;releaseYear&#34;:1977,&#34;role&#34;:&#34;&#34;} string: {&#34;name&#34;:&#34;Mr. M&#34;,&#34;song&#34;:&#34;Stayin&#39; Alive&#34;,&#34;artist&#34;:&#34;Bee Gees&#34;,&#34;releaseYear&#34;:1977,&#34;role&#34;:&#34;Sponsor&#34;} . NameAgeArtistRelease YearRole . Mr. M | Stayin&#39; Alive | Bee Gees | 1977 | Sponsor | Rithwikh | Drop It Like It&#39;s Hot | Snoop Dogg | 2004 | Teammate | Aidan | Ms. Jackson | OutKast | 2000 | Teammate | Jun | Ignition | R. Kelly | 2002 | Teammate | Yash | In Da Club | 50 Cent | 2003 | Teammate | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://yashshah138.github.io/Fastpages/week-5/2022/09/26/JavaScript-Tutorial.html",
            "relUrl": "/week-5/2022/09/26/JavaScript-Tutorial.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Fibonacci, Extends and Data Modeling",
            "content": "Produce the Fibonacci sequence in multiple ways . Fibonacci Using For Loop . import java.util.Scanner; public class FLoop { public static void main(String[] args) { Scanner in = new Scanner(System.in); int n = in.nextInt(); int firstTerm = 0, secondTerm = 1; System.out.println(&quot;Fibonacci Series for the first &quot; + n + &quot; terms:&quot;); for (int i = 1; i &lt;= n; i++) { System.out.print(firstTerm + &quot; &quot;); int nextTerm = firstTerm + secondTerm; firstTerm = secondTerm; secondTerm = nextTerm; } } } FLoop.main(null); . Fibonacci Series for the first 20 terms: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 . Fibonacci Using While Loop . import java.util.Scanner; public class WLoop { public static void main(String[] args) { Scanner in = new Scanner(System.in); int n = in.nextInt(); int firstTerm = 0, secondTerm = 1, i = 1; System.out.println(&quot;Fibonacci Series for the first &quot; + n + &quot; terms:&quot;); while (i &lt;= n) { System.out.print(firstTerm + &quot; &quot;); int nextTerm = firstTerm + secondTerm; firstTerm = secondTerm; secondTerm = nextTerm; i++; } } } WLoop.main(null); . Fibonacci Series for the first 20 terms: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 . Fibonacci Using Recursion . public class Recursion { public static void main(String[] args) { int lastTerm = 0, nextTerm = 1; Scanner sc = new Scanner(System.in); int maxTermLength = sc.nextInt(); System.out.println(&quot;How many terms do you want in the Fibonacci Sequence? &quot; + maxTermLength); System.out.println(&quot;Fibonacci Sequence with &quot; + maxTermLength + &quot; terms.&quot;); for (int i = 1; i &lt;= maxTermLength; ++i) { System.out.print(lastTerm+&quot; &quot;); int sum = lastTerm + nextTerm; lastTerm = nextTerm; nextTerm = sum; } } } Recursion.main(null); . How many terms do you want in the Fibonacci Sequence? 20 Fibonacci Sequence with 20 terms. 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 .",
            "url": "https://yashshah138.github.io/Fastpages/week-5/2022/09/26/Fibonacci.html",
            "relUrl": "/week-5/2022/09/26/Fibonacci.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Iteration Mini-Lab",
            "content": "Print Horizontally . class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot;ʕง ͠° ͟ل͜ ͡°)ʔ&quot;, //[0][0] eyes &quot; _⏄_/ &quot;, //[0][1] chin &quot; --0-- &quot;, //[0][2] body &quot; ⎛ ⎞ &quot; //[0][3] legs }, //Monkey 1 { &quot;ʕ༼ ◕_◕ ༽ʔ&quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }, //Monkey 2 { &quot; ʕ(▀ ⍡ ▀)ʔ&quot;, //[2][0] &quot; _⎐_/&quot;, &quot; &lt;-2-&gt; &quot;, &quot; 〈 〉 &quot; }, //Monkey 3 { &quot; ʕ ͡° ͜ʖ ° ͡ʔ&quot;, //[3][0] &quot; _⍾_/&quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }, //Monkey 4 { &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loops&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(&quot; n&quot; + i + &quot; little monkeys jumping on the bed...&quot;); System.out.println(&quot;Mama called the doctor and the doctor said...&quot;); System.out.println(&quot;NO MORE MONKEYS JUMPING ON THE BED!!&quot;); //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; monkeys[row].length; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int col = 0; col &lt; monkeyCount; col++) { // prints specific part of the monkey from the column System.out.print(monkeys[col][row] + &quot; &quot;); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;-&quot;); System.out.println(&quot;-&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loops 5 little monkeys jumping on the bed... Mama called the doctor and the doctor said... NO MORE MONKEYS JUMPING ON THE BED!! ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ (◕‿◕✿) _⏄_/ _⎏_/ _⎐_/ _⍾_/ _⍾_/ --0-- ++1++ &lt;-2-&gt; ==3== ==4== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ _/ _ 4 little monkeys jumping on the bed... Mama called the doctor and the doctor said... NO MORE MONKEYS JUMPING ON THE BED!! ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ _⏄_/ _⎏_/ _⎐_/ _⍾_/ --0-- ++1++ &lt;-2-&gt; ==3== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ 3 little monkeys jumping on the bed... Mama called the doctor and the doctor said... NO MORE MONKEYS JUMPING ON THE BED!! ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ _⏄_/ _⎏_/ _⎐_/ --0-- ++1++ &lt;-2-&gt; ⎛ ⎞ ⌋ ⌊ 〈 〉 2 little monkeys jumping on the bed... Mama called the doctor and the doctor said... NO MORE MONKEYS JUMPING ON THE BED!! ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ _⏄_/ _⎏_/ --0-- ++1++ ⎛ ⎞ ⌋ ⌊ 1 little monkeys jumping on the bed... Mama called the doctor and the doctor said... NO MORE MONKEYS JUMPING ON THE BED!! ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ No more monkeys jumping on the bed - - THE END . Yash&#39;s Monkeys . class Monkey { public Monkey(String monkeyName, String[] monkeyArt) { this.name = monkeyName; this.art = monkeyArt; } String name; String[] art; public void print() { for (int row = 0; row &lt; art.length; row++) { System.out.println(art[row]); } System.out.println(); } public static void main(String[] args) { String[] monkeyRithwikh = { &quot;ʕง ͠° ͟ل͜ ͡°)ʔ&quot;, &quot; _⏄_/ &quot;, &quot; --0-- &quot;, &quot; ⎛ ⎞ &quot; }; String[] monkeyAidan = { &quot;ʕ༼ ◕_◕ ༽ʔ&quot;, &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }; String[] monkeyJun = { &quot; ʕ ͡° ͜ʖ ° ͡ʔ&quot;, &quot; _⍾_/&quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }; Monkey Rithwikh = new Monkey(&quot;Rithwikh&quot;, monkeyRithwikh); Monkey Aidan = new Monkey(&quot;Aidan&quot;, monkeyAidan); Monkey Jun = new Monkey(&quot;Jun&quot;, monkeyJun); Monkey[] monkeys = {Rithwikh, Aidan, Jun}; for (int i = 0; i &lt; monkeys.length; i++) { System.out.println(monkeys[i].name + &quot;: &quot;); monkeys[i].print(); } } } Monkey.main(null); . Rithwikh: ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ Aidan: ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ Jun: ʕ ͡° ͜ʖ ° ͡ʔ _⍾_/ ==3== _/ _ .",
            "url": "https://yashshah138.github.io/Fastpages/week-4/2022/09/20/Iteration.html",
            "relUrl": "/week-4/2022/09/20/Iteration.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "2018 AP CSA FRQ 1",
            "content": "Part A . Write the simulate method, which simulates the frog attempting to hop in a straight line to a goal from the frog&#39;s starting position of 0 within a maximum number of hops. The method returns true if the frog successfully reached the goal within the maximum number of hops; otherwise, the method returns false. . The FrogSimulation class provides a method called hopDistance that returns an integer representing the distance (positive or negative) to be moved when the frog hops. A positive distance represents a move toward the goal. A negative distance represents a move away from the goal. The returned distance may vary from call to call. Each time the frog hops, its position is adjusted by the value returned by a call to the hopDistance method. . The frog hops until one of the following conditions becomes true: . The frog has reached or passed the goal. | The frog has reached a negative position. | The frog has taken the maximum number of hops without reaching the goal. | . Complete method simulate below. You must use hopDistance appropriately to receive full credit. . /** Simulates a frog attempting to reach the goal as described in part (a). * Returns true if the frog successfully reached or passed the goal during the simulation; * false otherwise. */ public boolean simulate() . My Solution . public boolean simulate() { int pos = 0; for (int i = 0; i &lt; maxHops; i ++) { posNow += hopDistance(); if (posNow &gt;= goalDistance) { return true; } else if (posNow &lt; 0) { return false; } } } . CollegeBoard Solution . public boolean simulate() { int position = 0; for (int count = 0; count &lt; maxHops; count++) { position += hopDistance(); if (position &gt;= goalDistance) { return true; } else if (position &lt; 0) { return false; } } return false; } . Part B . Write the runSimulations method, which performs a given number of simulations and returns the proportion of simulations in which the frog successfully reached or passed the goal. For example, if the parameter passed to runSimulations is 400, and 100 of the 400 simulate method calls returned true, then the runSimulations method should return 0.25. . Complete method runSimulations below. Assume that simulate works as specified, regardless of what you wrote in part (a). You must use simulate appropriately to receive full credit. . /** Runs num simulations and returns the proportion of simulations in which the frog * successfully reached or passed the goal. * Precondition: num &gt; 0 */ public double runSimulations(int num) . My Solution . public double runSimulations(int num) { int wins = 0; for (int j = 0; i &lt; num; i++) { if (simulate()) { wins++; } } return ((double)numSuccess/num); } . CollegeBoard Solution . public double runSimulations(int num) { int countSuccess = 0; for (int count = 0; count &lt; num; count++) { if(simulate()) { countSuccess++; } } return (double)countSuccess / num; } .",
            "url": "https://yashshah138.github.io/Fastpages/frqs/week-4/2022/09/20/AP-CSA-FRQ1.html",
            "relUrl": "/frqs/week-4/2022/09/20/AP-CSA-FRQ1.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Focus and Habits",
            "content": "Psychology and the Good Life by Laurie Santos Takeaways . Be happy | Be grateful for the things that you have | It is ok to ask for help | Just be present in the moment Don’t be worried about the past and don’t be anxious about the future | . | . Who Am I Grateful For . My family | My friends | My good health | . My Goals . I want to major in computer science with specialization in machine learning | I want to work in either software development or in investment banking and private equity | I want to better manage my time | I want to sleep at better times | I want to develop the technical skills in computer science to succeed | . . . .",
            "url": "https://yashshah138.github.io/Fastpages/human%20prep/2022/09/12/Focus-and-Habits.html",
            "relUrl": "/human%20prep/2022/09/12/Focus-and-Habits.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Boolean Expressions and If/Else Statements",
            "content": "Boolean Expressions . Booleans are either one of two instances. True/False or On/Off | A boolean type is declared with the boolean keyword and can only take the values true or false | . if (true) { System.out.println(&quot;True code block&quot;); } if (true &amp;&amp; !false) { System.out.println(&quot;True and Not False code block&quot;); } if (true || false) { System.out.println(&quot;True or False code block&quot;); } if ((true &amp;&amp; !false) &amp;&amp; (true || false)) { System.out.println(&quot;Confusing code block&quot;); } if (!((false || !true) || (false &amp;&amp; true))) { System.out.println(&quot;De Morgan&#39;s law in my head of confusing code block&quot;); } . True code block True and Not False code block True or False code block Confusing code block De Morgan&#39;s law in my head of confusing code block . If/Elseif/Else Statements . If statement to specify a block of Java code to be executed if a condition is true | Else statement to specify a block of code to be executed if the condition is false | Else if statement to specify a new condition if the first condition is false. | . int time = 22; // if statement if (time &lt; 10) { System.out.println(&quot;Good morning.&quot;); } // else if statement else if (time &lt; 20) { System.out.println(&quot;Good day.&quot;); } // else statement else { System.out.println(&quot;Good evening.&quot;); } . Good evening. . De Morgan&#39;s Law . Two definitions De Morgan&#39;s Law of Union: The complement of the union of the two sets A and B will be equal to the intersection of A&#39; (complement of A) and B&#39; (complement of B). This is also known as De Morgan&#39;s Law of Union. It can be represented as (A ∪ B)&#39; = A&#39; ∩ B&#39;. | Laws that define how we can negate an AND statement and how we can negate an OR statement. De Morgan&#39;s Laws simply state: !( a &amp;&amp; b) is equivalent to !a || ! | . | . if (!(!false &amp;&amp; !true) || (!(!false || false))) { System.out.println(&quot;De Morgan&#39;s Law hurts my head!&quot;); } . De Morgan&#39;s Law hurts my head! . Hack 2 - Add to lesson switch-case . public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); // sets the variable &quot;day&quot; as user input int day = sc.nextInt(); System.out.println(&quot;Pick an number between 1 and 7 &quot; + day); // checks if the user inputted number is 1 // If not, it runs through the rest of the statements if(num = 1){ System.out.println(&quot;The day is Monday&quot;); } else if(num = 2){ System.out.println(&quot;The day is Tuesday&quot;); } else if(num = 3){ System.out.println(&quot;The day is Wednesday&quot;); } else if(num = 4){ System.out.println(&quot;The day is Thursday&quot;); } else if(num = 5){ System.out.println(&quot;The day is Friday&quot;); } else if(num = 6){ System.out.println(&quot;The day is Saturday&quot;); } else if(num = 7){ System.out.println(&quot;The day is Sunday&quot;); } else{ System.out.println(&quot;Not a valid entry&quot;); } } } Main.main(null); . Pick a number: 26 26 is less than 30 . Converted to switch-case-case-case-case-otherwise . public class Switch { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int day = sc.nextInt(); // Asks user for a number of their choice System.out.println(&quot;Pick an number between 1 and 7: &quot; + day); // the day is the conditional variable that is tested switch (day) { // The switch case checks multiple conditions at once. // Switch is provided with an expression that can be a constant or literal expression that can be evaluated. // The value of the expression is matched with each test case till a match is found. // If there is no match then the &quot;default&quot; code runs. case 1: System.out.println(&quot;The first day is Monday&quot;); break; case 2: System.out.println(&quot;The second day is Tuesday&quot;); break; case 3: System.out.println(&quot;The third day is Wednesday&quot;); break; case 4: System.out.println(&quot;The fourth day is Thursday&quot;); break; case 5: System.out.println(&quot;The fifth day is Friday&quot;); break; case 6: System.out.println(&quot;The sixth day is Saturday&quot;); break; case 7: System.out.println(&quot;The seventh day is Sunday&quot;); break; // Our last test is if the number is not between 1 and 7. default: System.out.println(&quot;Not a valid entry. Choose a number between 1 and 7.&quot;); } } } Switch.main(null); . Pick an number between 1 and 7: 3 The third day is Wednesday .",
            "url": "https://yashshah138.github.io/Fastpages/2022/09/07/Boolean-Expressions-and-If-Statements.html",
            "relUrl": "/2022/09/07/Boolean-Expressions-and-If-Statements.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "code.org Unit 1",
            "content": "// Creating a class public class MyNeighborhood { public static void main(String[] args) { // Creating an Object Painter myPainter = new Painter(); // calling a method using dot notation myPainter.move(); myPainter.turnLeft(); } } . // Extend a superclass to the subclass // A.K.A. Inheritance public class PainterPlus extends Painter { public PainterPlus() { super(); } } . Inheritance . Inheritance allows us to &quot;inherit&quot; the methods and attributes of the superclass to the subclass | . // Formatting for inheritance public class subclass extends superclass { // code here } .",
            "url": "https://yashshah138.github.io/Fastpages/week-2/2022/09/06/code-org.html",
            "relUrl": "/week-2/2022/09/06/code-org.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Console Menu",
            "content": "Console Based Menu . Objects Used: . Used scanner class to get user input and make objects | Used system class to print out static methods | Used the Math Class from Java to create a basic console calculator | . import java.util.*; import java.util.Scanner; public class Hello { public static void main(String[] args) { Scanner inp = new Scanner(System.in); System.out.println(&quot;-&quot;); System.out.println(&quot;Choose one&quot;); System.out.println(&quot;-&quot;); System.out.println(&quot;1 - Addition&quot;); System.out.println(&quot;2 - Subtraction&quot;); System.out.println(&quot;3 - Multiplication&quot;); System.out.println(&quot;4 - Division&quot;); System.out.println(&quot;- n&quot;); int choose; choose = inp.nextInt(); System.out.println(&quot;Enter first number: &quot;); int num1; num1 = inp.nextInt(); System.out.println(&quot;Enter second number: &quot; + &quot; n&quot;); int num2; num2 = inp.nextInt(); int ans; switch (choose) { case 1: System.out.println(add( num1,num2)); break; case 2: System.out.println(sub( num1,num2)); break; case 3: System.out.println(mult( num1,num2)); break; case 4: System.out.println(div( num1,num2)); break; default: System.out.println(&quot;Illegal Operation&quot;); } } public static int add (int x, int y) { int result = x + y; System.out.println(x + &quot; + &quot; + y + &quot; equals&quot;); return result; } public static int sub (int x, int y) { int result = x-y; System.out.println(x + &quot; - &quot; + y + &quot; equals&quot;); return result; } public static int mult (int x, int y) { int result = x*y; System.out.println(x + &quot; * &quot; + y + &quot; equals&quot;); return result; } public static int div (int x, int y) { int result = x/y; System.out.println(x + &quot; / &quot; + y + &quot; equals&quot;); return result; } } Hello.main(null); . - Choose one - 1 - Addition 2 - Subtraction 3 - Multiplication 4 - Division - Enter first number: Enter second number: 3 * 3 equals 9 . Desktop GUI Menu . Swing and AWT imports allow Java to provide a Graphical User Interface on the desktop. . Other College Board Topics . A 1D array is used to store MENUS | A Control Structure, if-else if-else, is used to process Menu selection to code that performs related action | . Using Objects . Javax Swing UI (JFrame) | Timer with a TimerTask to allow action to repeatedly occur without halting thread. | . import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.util.Timer; import java.util.TimerTask; // Graphical-User-Interface for Desktop in Java using Java Swing. public class MenuJFrame extends JFrame implements ActionListener { private JFrame frame; private JMenuBar menubar; private JMenu menu; private JLabel message = new JLabel(&quot;Click on Menu to select an action.&quot;); public final String[] MENUS = { // 1D Array of Menu Choices &quot;CSA&quot;, &quot;COLORS&quot;, &quot;Loading...&quot;, }; // Statics to assist with timer and messaging, single copy (no instance) private static int delay = 10; private static int step = 1; private static String hashes = &quot;&quot;; // Constructor enables the Frame instance, the object &quot;this.frame&quot; public MenuJFrame(String title) { // Initializing Key Objects frame = new JFrame(title); menubar = new JMenuBar(); menu = new JMenu(&quot;Menu&quot;); // Initializing Menu objects and adding actions for (String mx : MENUS) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu.add(m); } // Adding / Connecting Objects menubar.add(menu); frame.setJMenuBar(menubar); frame.add(message); // Sets JFrame close operation to Class variable JFrame.EXIT_ON_CLOSE frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // set the size of window based on objects frame.setSize(700,400); // helps set the window to center of screen frame.setLocationRelativeTo(null); // makes the frame object visible according to properties previously set frame.setVisible(true); // flow of control shifts to frame object } public static void centreWindow(Window frame) { Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize(); int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2); int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2); frame.setLocation(x, y); } // event from user selecting a menu option public void actionPerformed(ActionEvent e) { // local variable to ActinEvent String selection = e.getActionCommand(); // menu selection String msg; // local variable to create response from action final String[] COLORS = {&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;, &quot;Yellow&quot;, &quot;Purple&quot;}; // add more colors here final String start_msg = &quot;&lt;html&gt;&quot;; // html building final String end_msg = &quot;&lt;/html&gt;&quot;; final String hash = &quot;$&quot;; // run code based on the menuItem that was selected if ( selection.equals(MENUS[0]) ) { // Hello Action msg = &quot;CSA IS AWESOME!&quot;; message.setText(msg); } else if ( selection.equals(MENUS[1]) ) { // Color Action msg = start_msg + &quot;&lt;p&gt;&quot; + selection + &quot;&lt;/p&gt;&quot;; for (String color : COLORS) { msg += &quot;&lt;font color=&quot; + color + &quot;&gt;&quot; + color + &quot; &lt;/font&gt;&quot;; } msg += end_msg; message.setText(msg); } else { // Loading Bar Action String loading = &quot;&lt;p&gt;Loading&lt;/p&gt;&quot;; // Code to run on a Timer Timer timer = new Timer(); TimerTask task = new TimerTask() { public void run() { // Method for TimerTask // Static and Local variables used to manage message building int random = (int) (Math.random() * COLORS.length); // random logic MenuJFrame.hashes += &quot;&lt;font color=&quot; + COLORS[random] + &quot;&gt;&quot; + hash + &quot;&lt;/font&gt;&quot;; String msg = start_msg + loading + hashes + end_msg; message.setText(msg); // Shutdown timer and reset data if(MenuJFrame.step++ &gt; MenuJFrame.delay) { MenuJFrame.step = 1; MenuJFrame.hashes=&quot;&quot;; timer.cancel(); } }; }; // Schedule task and interval timer.schedule(task, 200, 200); message.setText(start_msg + loading + hash + end_msg); // prime/initial display } } // Driver turn over control the GUI public static void main(String[] args) { // Activates an instance of MenuJFrame class, which makes a JFrame object new MenuJFrame(&quot;Menu&quot;); } } MenuJFrame.main(null); . Hacks . Explain where a Class is defined . A class is defined where you add variables, objects or methods to your code | . public class // Classname . Explain where an instances of a Class is defined . An instance is defined in the main class | For example, on Code.org we initiated an instance with | . PainterPlus myPainter = new PainterPlus(); . Explain where an object is calling a method . An object is calling a method when an action needs to be performed for the code to run. | Calling a method on code.org | . myPainter.paint(&quot;white&quot;); . Describe Console, GUI differences, or Code.org differences . Console . User enters input and get respective outputs | Not as visual | Requires very good understanding of script and syntax | Examples: BASH, Terminal, Command Prompt, Kali linux | . | GUI . Graphical User Interface | More visual interface | User-friendly | Examples: iOS, Android, MacOS, Windows | . | code.org . Introductory platform | Graphical representation of what code does with the syntax of the language | . | .",
            "url": "https://yashshah138.github.io/Fastpages/week-2/2022/09/06/Using-Objects.html",
            "relUrl": "/week-2/2022/09/06/Using-Objects.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Extra Credit Notes",
            "content": "Reflection . There were several things that I learned from the student panel today. The first thing that I learned was that within the field of computer science, there will always be somebody that is better at something than you, and instead of being sad about that to focus on my own strengths and play to those. For example, if somebody is better at the syntax of the language and I am better with the logic, we can form a team where I can plan out the structure and flow of the code and my partner can code the program. The second thing I learned from the student panel was that no matter which field of study you go to, there will always be computer science to either make it more efficient or help with automation. The example that I remember from the panel is from Colin when he was talking about a script that he wrote to convert his notes from a .docx file into a spreadsheet. I connected this with the automation hack that we had for this week where we tried to automate the installation process of the packages. The third and most important thing, in my opinion, is to persevere. There will always be bugs or problems and you cannot give up because you didn’t find the bub. On example I remember is when Mabel was talking about how we all forget a semicolon or an indent and we just have to be patient and persevere through. . Notes . Look at how you have developed and compare yourself with classmates | Look at your passions and look at how cs can help | CS will be used almost anywhere and should know as base | CSP helped build the technical background of building UI/UX | Most of them always had passion for CS and developed that passion through CSA/CSP | They realized that CS could help people | Persevere through challenges | Have to focus on your own path, don’t be worried about what other people think/do | Transition from HS to college CS was quite drastic | Just break things down into little steps | Not expected to know everything, learn to use resources to fix errors and learn | Don’t cut corners, go above and beyond | Will not always have a path, don’t be so focused on the plan that you don’t start | Good to have the knowledge of PBL classes beforehand | Be able to ask questions | Able to automate menial tasks | CS has lots of utilizations and useful even if you are not majoring in it | Will apply the stuff in other classes | Stats uses R | Build relationships with professors to do work with them | .",
            "url": "https://yashshah138.github.io/Fastpages/extras/2022/08/29/Alumni-Panel.html",
            "relUrl": "/extras/2022/08/29/Alumni-Panel.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Bash Kernel Basics Notebook",
            "content": "echo &quot;List of all files in the root folder ... &quot; cd vscode/Fastpages ls echo &quot;&quot; echo &quot;List of all files in the repository including all hidden files:&quot; cd vscode/Fastpages ls -a . List of all files in the root folder: 2022-05-15-07-21-16.png _config.yml _sass 2022-05-15-07-24-25.png _fastpages_docs _word 2022-05-15-07-25-15.png _includes assets Gemfile _layouts docker-compose.yml LICENSE _notebooks images Makefile _pages index.html README.md _plugins _action_files _posts List of all files in the repository including all hidden files: bash: cd: vscode/Fastpages: No such file or directory . 2022-05-15-07-25-15.png _pages .. Gemfile _plugins .DS_Store LICENSE _posts .devcontainer.json Makefile _sass .git README.md _word .gitattributes _action_files assets .github _config.yml docker-compose.yml .gitignore _fastpages_docs images .vscode _includes index.html 2022-05-15-07-21-16.png _layouts 2022-05-15-07-24-25.png _notebooks . Hack 1 - Is there anything we use to verify tools we install? . echo &quot;Checking versions and existence of python and java ... &quot; python3 --version python2 --version java --version javac --version . Checking versions and existence of python and java: Python 3.9.12 Python 2.7.18 java 11.0.12 2021-07-20 LTS Java(TM) SE Runtime Environment 18.9 (build 11.0.12+8-LTS-237) Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.12+8-LTS-237, mixed mode) javac 11.0.12 . Hack 2 - Is there anything we could verify with Anaconda? . echo &quot;Running checks with Anaconda ... &quot; conda --version echo &quot;&quot; conda list python . Running checks with Anaconda: conda 4.13.0 # packages in environment at /Users/yash/opt/anaconda3: # # Name Version Build Channel ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 msgpack-python 1.0.2 py39hf7b0b51_1 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 . Hack 3 - How would you update a repository? . cd ~/vscode/Fastpages git pull . Already up to date. . This is a small script to show understanding of BASH . echo &quot;&quot; echo &quot;This script will create a file in the _pages directory and will put all files inside including hidden files.&quot; cd ~ echo &quot;&quot; cd vscode/Fastpages/_pages ls touch 06_bash.md cd ~ ls -al &gt; vscode/Fastpages/_pages/06_bash.md echo &quot;&quot; echo &quot;vscode/Fastpages/_pages/06_bash.md&quot; nl vscode/Fastpages/_pages/06_bash.md . This script will create a file in the _pages directory and will put all files inside including hidden files. 01_notes.md 03_about.md 05_tags.html 404.html 02_vocab.md 04_search.html 06_bash.md vscode/Fastpages/_pages/06_bash.md 1 total 208 2 drwxr-xr-x+ 55 yash staff 1760 Aug 26 09:06 . 3 drwxr-xr-x 6 root admin 192 Aug 10 23:44 .. 4 -r-- 1 yash staff 7 Oct 2 2019 .CFUserTextEncoding 5 -rw-r--r--@ 1 yash staff 14340 Aug 23 10:43 .DS_Store 6 drwx 183 yash staff 5856 Aug 26 09:40 .Trash 7 drwxr-xr-x 3 yash staff 96 Oct 20 2021 .android 8 -rw- 1 yash staff 12711 Aug 26 09:11 .bash_history 9 -rw-r--r-- 1 yash staff 1331 Aug 18 08:54 .bash_profile 10 -rw-r--r-- 1 yash staff 672 Oct 4 2021 .bash_profile.pysave 11 drwx 30 yash staff 960 Aug 26 09:11 .bash_sessions 12 drwxr-xr-x 3 yash staff 96 Aug 18 22:40 .cache 13 drwxrwsr-x 3 yash staff 96 Aug 18 08:59 .conda 14 drwxr-xr-x 6 yash staff 192 Aug 21 23:39 .config 15 drwx 3 yash staff 96 Jun 2 2020 .cups 16 -rw-r--r-- 1 yash staff 208 Aug 26 2021 .gitconfig 17 drwxr-xr-x 4 yash staff 128 Sep 21 2021 .gradle 18 drwxr-xr-x 5 yash staff 160 May 1 19:15 .idlerc 19 drwxr-xr-x 3 yash staff 96 Mar 4 08:34 .ipython 20 drwxr-xr-x 3 yash staff 96 Aug 18 08:59 .jupyter 21 drwxr-xr-x 3 yash staff 96 Apr 12 10:14 .keras 22 -rw- 1 yash staff 20 May 6 12:04 .lesshst 23 drwxr-xr-x 3 yash staff 96 Aug 19 14:15 .m2 24 drwxr-xr-x 2 yash staff 64 Mar 8 13:25 .matplotlib 25 drwxr-xr-x 3 yash staff 96 Aug 18 09:21 .node-gyp 26 drwxr-xr-x 8 yash staff 256 Aug 21 23:44 .npm 27 drwxr-xr-x 3 yash staff 96 Mar 26 2021 .oracle_jre_usage 28 drwx 3 yash staff 96 Apr 12 11:25 .putty 29 -rw- 1 yash staff 51 Aug 27 2021 .python_history 30 drwxr-xr-x 3 yash staff 96 Aug 19 08:42 .redhat 31 drwx 6 yash staff 192 Aug 12 19:04 .ssh 32 drwxr-xr-x 3 yash staff 96 Aug 18 22:43 .sts4 33 -rw-r--r-- 1 yash staff 314 Aug 18 08:54 .tcshrc 34 -rw- 1 yash staff 1071 Aug 26 2021 .viminfo 35 drwxr-xr-x 4 yash staff 128 Feb 28 10:51 .vscode 36 -rw-r--r-- 1 yash staff 165 Aug 18 09:23 .wget-hsts 37 -rw-r--r-- 1 yash staff 597 Aug 18 08:54 .xonshrc 38 -rw-r--r-- 1 yash staff 248 Aug 21 23:32 .zprofile 39 -rw- 1 yash staff 18722 Aug 26 09:06 .zsh_history 40 drwx 68 yash staff 2176 Aug 26 09:06 .zsh_sessions 41 -rw-r--r-- 1 yash staff 490 Aug 18 08:54 .zshrc 42 drwx@ 5 yash staff 160 Nov 16 2021 Applications 43 drwx@ 4 yash staff 128 Aug 24 14:35 Creative Cloud Files 44 drwx@ 7 yash staff 224 Jul 11 21:15 Desktop 45 drwx@ 8 yash staff 256 May 11 10:34 Documents 46 drwx@ 48 yash staff 1536 Aug 25 22:44 Downloads 47 drwx@ 104 yash staff 3328 Aug 24 14:19 Library 48 drwx+ 9 yash staff 288 Dec 8 2021 Movies 49 drwx+ 10 yash staff 320 May 11 10:09 Music 50 drwx+ 7 yash staff 224 Dec 14 2020 Pictures 51 drwxr-x+ 4 yash staff 128 Oct 2 2019 Public 52 drwxr-xr-x 4 yash staff 128 Mar 5 2021 Samsung 53 drwxr-xr-x 5 yash staff 160 May 5 2019 java 54 drwxr-xr-x 3 yash staff 96 Aug 18 08:41 opt 55 drwxr-xr-x 8 yash staff 256 Aug 25 08:55 vscode 56 -rw-r--r--@ 1 yash staff 162 Feb 16 2021 ~$mes_Final.docx . Below is a script I developed to automate deployment . sudo apt update; sudo apt upgrade sudo apt install default-jre java --version sudo apt install default-jdk javac --version sudo apt update sudo apt upgrade sudo apt install maven mvn --version # This segment of code clones the repository and goes into that directory after done cloning cd ~ git clone https://github.com/guapbeast/Spring.git cd ~/Spring # Runs the maven wrapper package ./mvnw package # This assigns the result of the previous command to RESULT # Then runs an if/else statement # Saying that if the previous commands result comes back as exit code 0 # Then to proceed with changing the directory # If it does not work, then execute the following commands RESULT=$? if [[ $RESULT -eq 0 ]] then cd ~/Spring else sudo apt install -y dos2unix dos2unix ./mvnw chmod +x ./mvnw fi # &quot;&gt;&quot; overrides whatever is already in the file and writes # What is in the &quot;echo&quot; echo &#39; # syntax=docker/dockerfile:1 FROM openjdk:16-alpine3.13 WORKDIR /app RUN apk update &amp;&amp; apk upgrade &amp;&amp; apk add --no-cache git maven RUN git clone https://github.com/guapbeast/Spring.git /app RUN ./mvnw package CMD [&quot;java&quot;, &quot;-jar&quot;, &quot;target/spring-0.0.1-SNAPSHOT.jar&quot;] # EXPOSE port that is defined in spring_portfolio.git application.properties EXPOSE 8085&#39; &gt; Dockerfile # &quot;&gt;&quot; overrides whatever is already in the file and writes # What is in the &quot;echo&quot; echo &#39; version: &quot;3&quot; services: web: image: java_springv1 build: . ports: - &quot;8085:8085&quot; volumes: - persistent_volume:/app/volumes volumes: persistent_volume: driver: local driver_opts: o: bind type: none device: /home/ubuntu/Spring/volumes&#39; &gt; docker-compose.yml # Installs docker and docker-compose sudo apt install docker-compose -y sudo docker-compose up -d sudo apt install nginx cd /etc/nginx/sites-available sudo touch Spring # &quot;&gt;&quot; overrides whatever is already in the file and writes # What is in the &quot;echo&quot; echo &#39; server { listen 80; listen [::]:80; server_name csarithwikh.live www.csarithwikh.live; location / { proxy_pass http://localhost:8085; # Simple requests if ($request_method ~* &quot;(GET|POST)&quot;) { add_header &quot;Access-Control-Allow-Origin&quot; *; } # Preflight requests if ($request_method = OPTIONS ) { add_header &quot;Access-Control-Allow-Origin&quot; *; add_header &quot;Access-Control-Allow-Methods&quot; &quot;GET, POST, OPTIONS, HEAD&quot;; add_header &quot;Access-Control-Allow-Headers&quot; &quot;Authorization, Origin, X-Requested-With, Content-Type, Accept&quot;; return 200; } } }&#39; &gt; Spring sudo ln -s /etc/nginx/sites-available/Spring /etc/nginx/sites-enabled sudo nginx -t # This assigns the result of the previous command to RESULT # Then runs an if/else statement # Saying that if the previous commands result comes back as exit code 0 # Then to run the following code # If it does not work, then execute the other commands RESULT=$? if [[ $RESULT -eq 0 ]] then sudo systemctl restart nginx else echo &quot;Something went wrong!!!&quot; fi # Transfers data to the address curl http://localhost:8085; sudo snap install core; sudo snap refresh core sudo snap install --classic certbot sudo ln -s /snap/bin/certbot /usr/bin/certbot sudo certbot --nginx .",
            "url": "https://yashshah138.github.io/Fastpages/week-1/2022/08/25/Bash-Tutorial.html",
            "relUrl": "/week-1/2022/08/25/Bash-Tutorial.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Primitive Data Types",
            "content": "Notes on Primitive Data Types . There are two main types of data structures, primitive and non-primitive. Strings, arrays, etc. are examples of non-primitive data types. . Within primitive data types, we have boolean, characters (chars), bytes, shorts, ints, longs, floats, and doubles. For non-primitive data types, it is anything the is, well, non-primitive. For example, we have arrays and strings. . // java style to import library import java.util.Scanner; public class TestPrimitives { public static void main(String[] args) { Scanner input; // Integers input = new Scanner(System.in); System.out.print(&quot;Enter an integer: &quot;); try { int sampleInputInt = input.nextInt(); System.out.println(sampleInputInt); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer, &quot; + e); } input.close(); // Doubles input = new Scanner(System.in); System.out.print(&quot;Enter a double: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double, &quot; + e); } input.close(); // Booleans input = new Scanner(System.in); System.out.print(&quot;Enter a boolean: &quot;); try { boolean sampleInputBoolean = input.nextBoolean(); System.out.println(sampleInputBoolean); } catch (Exception e) { // if not true or false System.out.println(&quot;Not an boolean, &quot; + e); } input.close(); // Wrapper Class Strings input = new Scanner(System.in); System.out.print(&quot;Enter a String: &quot;); try { String sampleInputString = input.nextLine(); System.out.println(sampleInputString); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); } } TestPrimitives.main(null); . Enter an integer: 3 Enter a double: 3.3 Enter a boolean: true Enter a String: AP CSA is awesome .",
            "url": "https://yashshah138.github.io/Fastpages/week-1/2022/08/24/Primitives.html",
            "relUrl": "/week-1/2022/08/24/Primitives.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Python Kernel Notebook",
            "content": "print(&quot;Welcome to my Python Kernel Notebook!!&quot;) . Welcome to my Python Kernel Notebook!! .",
            "url": "https://yashshah138.github.io/Fastpages/2022/08/22/Python-Notebook.html",
            "relUrl": "/2022/08/22/Python-Notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Java Kernel Notebook",
            "content": "class HelloWorld { public static void main(String args[]) { System.out.println(&quot;Welcome to my Java Kernel Notebook!!&quot;); } } HelloWorld.main(null) . Welcome to my Java Kernel Notebook!! . System.out.println(&quot;Welcome to my Java Kernel Notebook!!&quot;) . Welcome to my Java Kernel Notebook!! .",
            "url": "https://yashshah138.github.io/Fastpages/week-0/2022/08/22/Java-Notebook.html",
            "relUrl": "/week-0/2022/08/22/Java-Notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "First Post to Fastpages",
            "content": "Welcome to my website! . Posts will be updated and added throughout the trimester as I learn more. . What is this? . This is a website that uses fastpages. This tool allows for easy creation of a website through the use of jupyter notebooks and markdown files. Here I will have my learnings and notes from throughout the trimester. .",
            "url": "https://yashshah138.github.io/Fastpages/week-0/2022/08/21/first-post.html",
            "relUrl": "/week-0/2022/08/21/first-post.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "About Yash Shah . . I am a senior at Del Norte High School and am taking AP Computer Science A. My goal for this class is to learn Java, develop the soft skills needed to work in the computer science field, and have fun! . . My professional goal is to major in computer science with a specialization in machine learning and artificial intelligence with a minor in automotive engineering and finance. . . Some of my hobbies include building LEGOs, hanging out with friends, traveling with family, and photography. I also love tinkering with different things related to computer science. For example, I made my own vpn using AWS and some open-source software over the summer. .",
          "url": "https://yashshah138.github.io/Fastpages/about",
          "relUrl": "/about",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "College Board",
          "content": "This page will be used to display the learnings from College Board and its requirements. . Table of Contents (ToC) . Unit 1 - Primitive Types | Unit 2 - Using Objects | Unit 3 - Boolean Expressions and if Statements | Unit 4 - Iteration | Unit 5 - Writing Classes | Unit 6 - Array | Unit 7 - ArrayList | Unit 8 - 2D Array | Unit 9 - Inheritance | Unit 10 - Recursion | . (links will be added as we go) .",
          "url": "https://yashshah138.github.io/Fastpages/notes",
          "relUrl": "/notes",
          "date": ""
      }
      
  

  

  

  
      ,"page5": {
          "title": "",
          "content": "Welcome to my fastpages for AP Computer Science A. Here I will show my notes and learnings from this class. . Blogs .",
          "url": "https://yashshah138.github.io/Fastpages/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Welcome to my fastpages for AP Computer Science A. Here I will show my notes and learnings from this class. . Blogs .",
          "url": "https://yashshah138.github.io/Fastpages/page2/",
          "relUrl": "/page2/",
          "date": ""
      }
      
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://yashshah138.github.io/Fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}